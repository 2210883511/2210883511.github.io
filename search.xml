<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>JQuery</title>
    <url>/2021/11/16/JQuery/</url>
    <content><![CDATA[<p><strong>JQuery基础知识</strong></p>
<span id="more"></span>

<h2 id="JQuery核心函数"><a href="#JQuery核心函数" class="headerlink" title="JQuery核心函数"></a>JQuery核心函数</h2><ul>
<li><p>$ 是JQuery的核心函数，能完成JQuery的很多功能。$()就是调用$这个函数</p>
</li>
<li><p>传入参数为<strong>函数</strong>时</p>
<ul>
<li><p>表示页面加载完成之后。相当于window.onload =function(){}</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">    </span><br><span class="line"> $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $obj = $(<span class="string">&quot;#app&quot;</span>)</span><br><span class="line">     alert(obj)</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br><span class="line">    </span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>传入参数为HTML字符串时：</p>
<ul>
<li><p>会创建这个html标签对象</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">    </span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">&quot; &lt;div&gt;\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;        &lt;span&gt;test&lt;/span&gt;\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;    &lt;/div&gt;&quot;</span>).appendTo(<span class="string">&quot;body&quot;</span>)</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br><span class="line">    </span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>传入参数为选择器字符串时：</p>
<ul>
<li><p>根据这个字符串查找元素节点对象</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">    </span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">   $(<span class="string">&quot;div&quot;</span>)</span><br><span class="line">    $(<span class="string">&quot;#app&quot;</span>)</span><br><span class="line">    $(<span class="string">&quot;.h&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">    </span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>传入参数为DOM对象时：</p>
<ul>
<li><p>将DOM对象包装为JQuery对象返回</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">    </span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> obj = <span class="built_in">document</span>.getElementById(<span class="string">&quot;app&quot;</span>);</span><br><span class="line">    alert(obj)</span><br><span class="line">    alert($(obj))</span><br><span class="line">&#125;)</span><br><span class="line">    </span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<p> <strong>JQuery对象的本质是什么</strong></p>
<ul>
<li>JQuery对象是dom对象的数组+JQuery提供的一系列功能函数</li>
</ul>
<p> <strong>JQuery对象与dom对象的相互转换</strong></p>
<ul>
<li><p>dom对象转换为JQuery对象</p>
<ul>
<li><p>先有dom对象</p>
</li>
<li><p>$(dom对象)就可以转换成JQuery对象</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> obj = <span class="built_in">document</span>.getElementById(<span class="string">&quot;app&quot;</span>);a</span><br><span class="line">            alert(obj)</span><br><span class="line">            alert($(obj))</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>JQuery对象转换为dom对象</p>
<ul>
<li><p>先有JQuery对象</p>
</li>
<li><p>JQuery对象[下标]取出</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">           <span class="keyword">let</span> obj = <span class="built_in">document</span>.getElementById(<span class="string">&quot;app&quot;</span>);</span><br><span class="line">           alert(obj)</span><br><span class="line">           alert($(obj)[<span class="number">0</span>])</span><br><span class="line">       &#125;)</span><br></pre></td></tr></table></figure>

<img src="/2021/11/16/JQuery/dom对象.png" style="zoom:60%;">

<img src="/2021/11/16/JQuery/JQuery对象.png" style="zoom:60%;"></li>
</ul>
</li>
</ul>
<h3 id="基础选择器"><a href="#基础选择器" class="headerlink" title="基础选择器"></a>基础选择器</h3><ul>
<li><p>id选择器</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> $obj = $(<span class="string">&quot;#app&quot;</span>)</span><br><span class="line"><span class="keyword">var</span> $btn = $(<span class="string">&quot;#change&quot;</span>)</span><br></pre></td></tr></table></figure></li>
<li><p>标签选择器</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$obj.click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">               $(<span class="string">&quot;div&quot;</span>).css(<span class="string">&quot;background-color&quot;</span>,<span class="string">&quot;blue&quot;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
<li><p>类选择器</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">  $btn.click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">  		 $(<span class="string">&quot;.btn&quot;</span>).css(<span class="string">&quot;background-color&quot;</span>,<span class="string">&quot;green&quot;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
<li><p>组合选择器</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">  $obj.click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">                $(<span class="string">&quot;div,span,button#all,button.btn&quot;</span>).css(<span class="string">&quot;background-color&quot;</span>,<span class="string">&quot;blue&quot;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
<li><p>选择所有元素</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">  $(<span class="string">&quot;button#all&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">                $(<span class="string">&quot;*&quot;</span>).css(<span class="string">&quot;background-color&quot;</span>,<span class="string">&quot;black&quot;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="层级选择器"><a href="#层级选择器" class="headerlink" title="层级选择器"></a>层级选择器</h3><ul>
<li><p>ancestor descendant</p>
<ul>
<li><p>选择所有body内的div元素</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;body div&quot;</span>).css(<span class="string">&quot;background-color&quot;</span>,<span class="string">&quot;red&quot;</span>)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>parent &gt; child</p>
<ul>
<li><p>选择body中的div子元素</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;body &gt; div&quot;</span>).css(<span class="string">&quot;background-color&quot;</span>,<span class="string">&quot;red&quot;</span>)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>prve + next</p>
<ul>
<li><p>选择id为app相邻的下一个div</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;#app + div&quot;</span>).css(<span class="string">&quot;background-color&quot;</span>,<span class="string">&quot;red&quot;</span>)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>prev ~ siblings</p>
<ul>
<li><p>选择所有在id为app元素后面的所有div兄弟元素</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;#app ~ div&quot;</span>).css(<span class="string">&quot;background-color&quot;</span>,<span class="string">&quot;red&quot;</span>)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h3 id="基本过滤选择器"><a href="#基本过滤选择器" class="headerlink" title="基本过滤选择器"></a>基本过滤选择器</h3><p>​    </p>
]]></content>
      <tags>
        <tag>JQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb</title>
    <url>/2021/11/14/JavaWeb/</url>
    <content><![CDATA[<p><strong>JavaWeb基础知识</strong></p>
<span id="more"></span>

<h2 id="表单提交的细节"><a href="#表单提交的细节" class="headerlink" title="表单提交的细节"></a>表单提交的细节</h2><ul>
<li><p><strong>form标签是表单标签</strong></p>
<ul>
<li>action属性设置提交的服务器地址</li>
<li>method属性设置提交的方式GET(默认值)或POST</li>
</ul>
</li>
<li><p><strong>表单提交的时候,数据没有发送给服务器的三种情况:</strong></p>
<ul>
<li>表单项没有name属性值</li>
<li>单选、复选（下拉列表中的option标签）都需要添加value属性，以便发送给服务器</li>
<li>表单项不在提交的form标签中</li>
</ul>
</li>
<li><p>GET请求的特点是：</p>
<ul>
<li>浏览器地址栏中的地址是：URL?name=value&amp;name=value</li>
<li>不安全</li>
<li>它有长度限制</li>
</ul>
</li>
<li><p>POST请求的特点是：</p>
<ul>
<li>浏览器地址栏中只有action属性值</li>
<li>相对于GET请求安全</li>
<li>理论上没有长度限制</li>
</ul>
</li>
</ul>
<p>-<br> <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">&quot;font-family: 宋体;font-size: 18px&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>  <span class="attr">action</span>=<span class="string">&quot;http://localhost:8080&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">     </span><br><span class="line">       <span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名称：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;默认显示&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户密码：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>确认密码：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;surePassword&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>性别：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;boy&quot;</span>&gt;</span>男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;girl&quot;</span>&gt;</span>  女<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>课程：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;course&quot;</span> <span class="attr">value</span>=<span class="string">&quot;JavaScript&quot;</span>&gt;</span>JavaScript<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;course&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Java&quot;</span>&gt;</span>Java<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;course&quot;</span> <span class="attr">value</span>=<span class="string">&quot;C++&quot;</span>&gt;</span>C++<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>书籍<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;book&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;请选择书籍&quot;</span>&gt;</span>--请选择书籍--<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Java&quot;</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;JavaWeb&quot;</span>&gt;</span>JavaWeb<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;C++&quot;</span>&gt;</span>C++<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>选择文件：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>自我介绍:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;10&quot;</span><span class="attr">name</span>=<span class="string">&quot;desc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<h2 id="CSS与Html的结合方式"><a href="#CSS与Html的结合方式" class="headerlink" title="CSS与Html的结合方式"></a>CSS与Html的结合方式</h2><ul>
<li><p>方式一： <code>style=&quot; key_1:value_1;key_2:value_2;key_3:value_3 &quot;</code></p>
<ul>
<li>缺点：如果标签多，样式多，代码量比较庞大。</li>
<li>可读性非常差</li>
<li>Css代码没什么复用性可言</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">&quot;font-family: 宋体;font-size: 18px&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>方式二：<code>head</code>标签中添加<code>style</code>样式</p>
<ul>
<li>缺点：只能在同一个页面内复用代码，不能在多个页面复用css代码</li>
<li>缺点：维护起来不太方便，实际的项目中会有成千上万的页面，要到每个页面中去修改。</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">            <span class="attribute">font-family</span>: 宋体,serif;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">span</span>&#123;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">            <span class="attribute">font-family</span>: Arial sans-serif;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure></li>
<li><p>方式三：把css样式写成一个单独的css文件，再通过<code>link</code>标签引入即可复用</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./test.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><ul>
<li><p>标签名选择器</p>
 <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: 宋体 serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>id选择器</p>
 <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#test</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: 宋体 serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>class选择器（类选择器）</p>
 <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.test</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: 宋体 serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>组合选择器</p>
 <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>,<span class="selector-id">#test</span>,<span class="selector-class">.stu</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: 宋体 serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="JavaScript与html结合的方式"><a href="#JavaScript与html结合的方式" class="headerlink" title="JavaScript与html结合的方式"></a>JavaScript与html结合的方式</h2><ul>
<li><p>方式一：放入html的<code>head</code>标签中</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        alert(<span class="string">&quot;hello&quot;</span>)</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>方式二：通过<code>script</code>标签引入外部的js文件</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/hello.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="js中的函数定义"><a href="#js中的函数定义" class="headerlink" title="js中的函数定义"></a>js中的函数定义</h2><ul>
<li><p>方式一</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">&quot;空参数&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">fun();</span><br></pre></td></tr></table></figure></li>
<li><p>方式二</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="function"><span class="keyword">function</span> (<span class="params">a,b</span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">&quot;第二种方式&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 方法重载会覆盖上一次的方法</span></span><br></pre></td></tr></table></figure></li>
<li><p>隐形参数arguments</p>
<ul>
<li>不需要在函数中写形参，用的时候直接传值即可，使用隐性参数可以得到参数的值和参数的个数</li>
</ul>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;<span class="built_in">arguments</span>.length;i++)&#123;</span><br><span class="line">        alert(<span class="built_in">arguments</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">fun(<span class="number">1</span>,<span class="string">&#x27;hello&#x27;</span>,<span class="literal">true</span>,[<span class="number">1</span>,<span class="string">&#x27;hello&#x27;</span>,<span class="literal">false</span>]);</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="js中的自定义对象"><a href="#js中的自定义对象" class="headerlink" title="js中的自定义对象"></a>js中的自定义对象</h2><ul>
<li><p>Object形式的自定义对象</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> user = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">user.name = <span class="string">&#x27;lizhengming&#x27;</span>;</span><br><span class="line">user.age = <span class="number">20</span>;</span><br><span class="line">user.sex =<span class="string">&#x27;male&#x27;</span>;</span><br><span class="line">user.sum = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">&quot;方法！&quot;</span>)</span><br><span class="line">    alert(<span class="string">&quot;方法！&quot;</span>)</span><br><span class="line">    <span class="comment">// 对象的访问</span></span><br><span class="line">    alert(<span class="built_in">this</span>.name);</span><br><span class="line">    alert(<span class="built_in">this</span>.age);</span><br><span class="line">    alert(<span class="built_in">this</span>.sex);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(user.sum())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>花括号形式的自定义对象</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> data = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;李征明&#x27;</span>,</span><br><span class="line">    <span class="attr">id</span>:<span class="number">11</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">20</span>,</span><br><span class="line">    <span class="attr">sum</span>:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.info(<span class="built_in">this</span>.name);</span><br><span class="line">        <span class="built_in">console</span>.info(<span class="built_in">this</span>.id);</span><br><span class="line">        <span class="built_in">console</span>.info(<span class="built_in">this</span>.age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    data.sum()</span><br><span class="line">&#125;</span><br><span class="line">fun();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> data =&#123;</span><br><span class="line">     属性名：值,</span><br><span class="line">     属性名：值,</span><br><span class="line">     属性名：值,</span><br><span class="line">     属性名：<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="js中的事件"><a href="#js中的事件" class="headerlink" title="js中的事件"></a>js中的事件</h2><ul>
<li><p>常用的事件</p>
<ul>
<li><code>onload</code> 加载完成事件： 页面加载完成之后，常用于做页面js代码初始化操作</li>
<li><code>onclick</code> 单击事件：常用于按钮的点击响应操作</li>
<li><code>onblur</code>失去焦点事件：常用于输入框失去焦点后验证其输入内容是否合法</li>
<li><code>onchange</code>内容发生改变事件：常用于下拉列表和输入框内容发生改变后操作</li>
<li><code>onsubmit</code>表单提交事件：常用于表单提交前，验证 所有表单项是否合法</li>
</ul>
</li>
<li><p>事件的注册分成两种一种是<strong>静态注册</strong>，另一种是<strong>动态注册</strong></p>
</li>
<li><p>什么是事件的注册或绑定？</p>
<ul>
<li>告诉浏览器，当事件响应后要执行那写代码</li>
</ul>
</li>
<li><p>静态注册事件：</p>
<ul>
<li>通过html标签的事件属性直接赋予事件响应后的代码，这种方式叫静态注册</li>
</ul>
</li>
<li><p>先通过js代码得到标签的dom对象，然后再通过dom对象.事件=function（）{ } 这种形式叫动态注册</p>
<ul>
<li>动态注册的基本步骤：<ul>
<li>获取标签对象</li>
<li>标签对象.事件名=function（） { }</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>onload</strong>事件是浏览器解析完页面之后就会自动触发的事件</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">&quot;静态注册onload事件&quot;</span>)</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">         <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">             alert(<span class="string">&quot;动态注册的onload&quot;</span>)</span></span><br><span class="line"><span class="javascript">         &#125;</span></span><br><span class="line"><span class="javascript">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">&quot;fun()&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><img src="/2021/11/14/JavaWeb/onload静态测试.png" style="zoom:60%;"></li>
<li><p><strong>onclick</strong>事件</p>
<ul>
<li><p>静态注册</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">       </span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">           alert(<span class="string">&quot;hello&quot;</span>)</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;fun()&quot;</span>&gt;</span>test<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>动态注册</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">           alert(<span class="string">&quot;hello&quot;</span>)</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;app&quot;</span>).onclick=fun();</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span> = <span class="string">&quot;app&quot;</span>&gt;</span>test<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p><strong>onblur</strong>、<strong>onchange</strong>类似不再写</p>
</li>
<li><p><strong>onsubmit事件</strong></p>
<ul>
<li><p>静态阻止表单的提交</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> <span class="attr">onsubmit</span>=<span class="string">&quot;return false&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>动态阻止表单的提交</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">       <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> obj =  <span class="built_in">document</span>.getElementById(<span class="string">&quot;form&quot;</span>);</span></span><br><span class="line"><span class="javascript">           obj.onsubmit = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               alert(<span class="string">&quot;数据不合法！！&quot;</span>)</span></span><br><span class="line"><span class="javascript">               <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">           &#125;</span></span><br><span class="line"><span class="javascript">       &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;https://www.baidu.com&quot;</span>  <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">id</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h2 id="文档对象模型"><a href="#文档对象模型" class="headerlink" title="文档对象模型"></a>文档对象模型</h2><ul>
<li><img src="/2021/11/14/JavaWeb/文档对象模型.png" style="zoom: 50%;"></li>
<li><p>js验证输入问题</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> obj = <span class="built_in">document</span>.getElementById(<span class="string">&quot;app&quot;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> pattern;</span></span><br><span class="line"><span class="javascript">            pattern = <span class="regexp">/^\w&#123;5,12&#125;$/</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(pattern.test(obj.value)) &#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&quot;输入合法！！！&quot;</span>)</span></span><br><span class="line"><span class="javascript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&quot;输入不合法！！！&quot;</span>)</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;字母数字下划线组成&quot;</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;fun()&quot;</span>&gt;</span>检验<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p><strong>getElementsByNamegetElementsByTagName;实现全选、全不选案例</strong></p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// let obj = document.getElementsByTagName(&quot;input&quot;);</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> obj = <span class="built_in">document</span>.getElementsByName(<span class="string">&quot;hobby&quot;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">const</span> objElement <span class="keyword">of</span> obj) &#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(objElement.checked)&#123;</span></span><br><span class="line"><span class="javascript">                    alert(objElement.value)</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">checkAll</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// let obj = document.getElementsByTagName(&quot;input&quot;);</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span>  obj =  <span class="built_in">document</span>.getElementsByName(<span class="string">&quot;hobby&quot;</span>);</span></span><br><span class="line"><span class="javascript">            alert(obj.length)</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">const</span> objElement <span class="keyword">of</span> obj) &#123;</span></span><br><span class="line"><span class="javascript">                objElement.checked=<span class="literal">true</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">notAll</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// let obj = document.getElementsByTagName(&quot;input&quot;);</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span>  obj =  <span class="built_in">document</span>.getElementsByName(<span class="string">&quot;hobby&quot;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">let</span> objElement <span class="keyword">of</span> obj) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.info(objElement.checked)</span></span><br><span class="line"><span class="javascript">                objElement.checked=<span class="literal">false</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;C++&quot;</span>&gt;</span>C++</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Java&quot;</span>&gt;</span>Java</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;JavaScript&quot;</span>&gt;</span>JavaScript<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;fun()&quot;</span>&gt;</span>查询<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;notAll()&quot;</span>&gt;</span>全不选<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;checkAll()&quot;</span>&gt;</span>全选<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>查询一定要在页面加载完成之后再使用</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>JavaWeb</tag>
      </tags>
  </entry>
  <entry>
    <title>Javascript基础语法--数据类型</title>
    <url>/2021/10/06/Javascript%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<p>Javascript基本语法–变量</p>
<span id="more"></span>

<p><strong>思维导图:</strong></p>
<p><img src="/2021/10/06/Javascript%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%AF%BC%E5%9B%BE.jpg"></p>
<table>
<thead>
<tr>
<th align="center">数据类型</th>
<th align="center">转换为true的值</th>
<th align="center">转换为false的值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Boolean</td>
<td align="center">true</td>
<td align="center">false</td>
</tr>
<tr>
<td align="center">String</td>
<td align="center">非空字符串</td>
<td align="center">“” 空字符串</td>
</tr>
<tr>
<td align="center">Number</td>
<td align="center">非零数值(包括无穷)</td>
<td align="center">0、NaN</td>
</tr>
<tr>
<td align="center">Object</td>
<td align="center">任意对象</td>
<td align="center">null</td>
</tr>
<tr>
<td align="center">Undefined</td>
<td align="center">N / A(不存在)</td>
<td align="center">undefined</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown基本语法</title>
    <url>/2021/10/04/MarkDown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<p><strong>Markdown 基本语法</strong></p>
<span id="more"></span>

<h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><ul>
<li>在行首插入 # 可标记出标题</li>
<li>#的个数表示了标题的等级</li>
<li>建议在# 后面加一个空格</li>
<li>Markdown中最多支持前六级标题</li>
</ul>
<p><strong>效果如下</strong></p>
<img src="/2021/10/04/MarkDown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/2.png" alt="image-20211004191723293" style="zoom: 67%;">

<h2 id="2-粗体和斜体"><a href="#2-粗体和斜体" class="headerlink" title="2.粗体和斜体"></a>2.粗体和斜体</h2><ul>
<li>粗体由两个*或者两个_包裹</li>
<li>斜体由一个*或者一个_包裹</li>
<li>建议粗体用两个*包裹</li>
<li>建议斜体用一个*包裹</li>
</ul>
<p><strong>效果如下：</strong></p>
<img src="/2021/10/04/MarkDown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/3.png" style="zoom:67%;">



<h2 id="3-段落与换行"><a href="#3-段落与换行" class="headerlink" title="3.段落与换行"></a>3.段落与换行</h2><ul>
<li>如果行与行之间没有空行，则会被视为同一段落</li>
<li>如果行与行之间有空行，则会视为不同段落</li>
<li>空行是指行内什么都没有，或者只有空格和制表符</li>
<li>如果想在段内换行，则需要在上一行的结尾插入两个以上的空格然后按回车键</li>
</ul>
<h2 id="4-列表"><a href="#4-列表" class="headerlink" title="4.列表"></a>4.列表</h2><ul>
<li>数字序号 + 英文句号 + 空格  + 列表内容 表示有序列表</li>
<li>星号 + 空格  +  列表内容 表示无序列表</li>
<li>使用+ - * / 来标记无序列表的效果是相同的</li>
<li>列表中可以嵌套列表</li>
<li>有序列表和无序列表页可以互相嵌套</li>
<li>建议使用 <strong>-</strong> 标记无序列表</li>
<li>无序列表有换行则建议使用3个空格</li>
<li>有序列表有换行则建议使用2个空格</li>
</ul>
<p><strong>效果如下：</strong></p>
<img src="/2021/10/04/MarkDown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/4.png" style="zoom:67%;">

<h2 id="5-分割线"><a href="#5-分割线" class="headerlink" title="5.分割线"></a>5.分割线</h2><ul>
<li>分割线使用至少三个以上的* / - / _ 来标记</li>
<li>行内不能有其他的字符</li>
<li>可以在标记符中间加上空格</li>
</ul>
<p><strong>效果如下：</strong></p>
<img src="/2021/10/04/MarkDown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/5.png" style="zoom:67%;">

<h2 id="6-网址链接"><a href="#6-网址链接" class="headerlink" title="6.网址链接"></a>6.网址链接</h2><ul>
<li>建议使用&lt;&gt;包裹自动链接</li>
<li>自动链接要以http / https开头</li>
</ul>
<p><strong>效果如下：</strong></p>
<img src="/2021/10/04/MarkDown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/6.png" style="zoom:67%;">

<h2 id="7-行内代码与代码块"><a href="#7-行内代码与代码块" class="headerlink" title="7.行内代码与代码块"></a>7.行内代码与代码块</h2><ul>
<li>行内代码使用`包裹 </li>
<li><code>测试</code></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">``` python</span><br><span class="line"></span><br><span class="line">```</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Javascript基本语法--变量</title>
    <url>/2021/10/04/Javascript%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95-%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<p><strong>Javascript基础语法–变量</strong></p>
<span id="more"></span>

<p><strong>定义变量：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> app;		<span class="comment">//定义变量</span></span><br><span class="line"><span class="keyword">var</span> app = <span class="string">&quot;hello world!&quot;</span>; 		<span class="comment">// 定义变量并初始化赋值</span></span><br><span class="line"><span class="keyword">var</span> name,sex,age,num;  	<span class="comment">//定义多个变量(初始化可选)</span></span><br></pre></td></tr></table></figure>



<p><strong>注释：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 单行注释</span></span><br><span class="line"><span class="comment">/* 多行注释 */</span> </span><br></pre></td></tr></table></figure>



<p><strong>var声明作用域：</strong></p>
<ul>
<li>使用<code>var</code>定义的变量会成为包含它的函数的局部变量</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="string">&quot;hello world!&quot;</span>; <span class="comment">//局部变量</span></span><br><span class="line">&#125;</span><br><span class="line">test();</span><br><span class="line"><span class="built_in">console</span>.log(app); <span class="comment">//Error</span></span><br><span class="line"></span><br><span class="line">-------------------------------</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    app = <span class="string">&quot;hello world!&quot;</span>  <span class="comment">//省略var可以创建全局变量，但不推荐,严格模式下错误。</span></span><br><span class="line">&#125;</span><br><span class="line">test();</span><br><span class="line"><span class="built_in">console</span>.log(app);</span><br></pre></td></tr></table></figure>

<p><strong>var声明提升：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(age);</span><br><span class="line">    <span class="keyword">var</span> age = <span class="number">26</span>;</span><br><span class="line">&#125;</span><br><span class="line">test(); </span><br></pre></td></tr></table></figure>

<p><code>等价如下：</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> age;</span><br><span class="line">    <span class="built_in">console</span>.log(age);</span><br><span class="line">    age = <span class="number">26</span>;</span><br><span class="line">&#125;</span><br><span class="line">test();   </span><br><span class="line"><span class="comment">// 这就是所谓的提升（hoist），也就是把所有变量的声明都拉到函数作用域的顶部</span></span><br><span class="line"><span class="comment">// 反复多次使用var声明同一个变量也没有问题</span></span><br></pre></td></tr></table></figure>

<p><strong>let声明:</strong></p>
<ul>
<li><code>let</code>声明的范围是块作用域，而<code>var</code>声明的范围是函数作用域</li>
<li><code>let</code>声明的变量不会在作用域中被提升</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> name = <span class="string">&quot;李征明&quot;</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(name); <span class="comment">// 李征明</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(name); <span class="comment">//李征明</span></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> age = <span class="number">26</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(age); <span class="comment">//26</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(age); <span class="comment">//ReferenceError: age 没有定义</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里age的作用域仅仅在块内部</span></span><br><span class="line"><span class="comment">// let 不允许同一个块作用域出现冗余声明</span></span><br><span class="line"><span class="keyword">let</span> age；</span><br><span class="line"><span class="keyword">let</span> age；  <span class="comment">//Error</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>全局声明:</strong></p>
<ul>
<li><code>var</code>在全局作用域中声明的变量会成为window对象的属性</li>
<li><code>let</code>在全局作用域中声明的变量不会成为window对象的属性</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;李征明&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> age = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.name);  <span class="comment">//李征明</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.age);	<span class="comment">// undefined</span></span><br></pre></td></tr></table></figure>

<p><strong>for循环中的let声明</strong></p>
<ul>
<li>for循环定义的迭代变量会渗透到循环体外部</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span> i++)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i);   <span class="comment">// 5</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i); <span class="comment">// Error,i没有定义</span></span><br></pre></td></tr></table></figure>

<p><strong>const声明:</strong></p>
<ul>
<li><code>const</code>基本与<code>let</code>相同，唯一一个重要区别是声明变量时需要初始化，且不可修改</li>
<li><code>const</code>可以修改声明对象的内部的属性</li>
<li>不能使用<code>const</code>迭代变量</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> age = <span class="number">26</span>;</span><br><span class="line">age = <span class="number">36</span> ; <span class="comment">// Error,给常量赋值</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>MySql基础知识</title>
    <url>/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<p><strong>MySql基础知识</strong></p>
<span id="more"></span>

<ol>
<li><p>MySql常见命令</p>
<ul>
<li><p>查看当前所有的数据库</p>
<p><code>show databases;</code></p>
</li>
<li><p>打开指定的库</p>
<p><code>use + 库名</code></p>
</li>
<li><p>查看当前库的所有表</p>
<p><code>show tables;</code></p>
</li>
<li><p>查看其它库的所有表</p>
<p><code>show tables from + 库名;</code></p>
</li>
<li><p>创建表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">	</span><br><span class="line">    列名 列类型,</span><br><span class="line">    列名 列类型,</span><br><span class="line">    列名 列类型,</span><br><span class="line">    .......</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li>
<li><p>查看表结构</p>
<p><code>desc + 表名;</code></p>
</li>
<li><p>插入语句</p>
<p><code>insert into + 表名 + (字段名1，字段名2，...) values(val_1,val_2,...);</code></p>
</li>
<li><p>查询语句</p>
<p><code>select * from + 表名 (查询全部)</code></p>
</li>
<li><p>更新语句</p>
<p><code>update + 表名 + set +字段名 = val where 字段名 = val</code></p>
</li>
<li><p>删除语句</p>
<p><code>delete from + 表名+where + 字段名 = val</code></p>
</li>
<li><p>查看服务器的版本</p>
<p><code>select version();</code> 登录到mysql服务端</p>
<p><code>mysql -v;</code>没有登录的mysql服务端</p>
</li>
</ul>
<p>1.1 <strong>测试示例</strong></p>
<ul>
<li><code>showdatabases</code><ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/show_databases.png" style="zoom:80%;"></li>
</ul>
</li>
</ul>
<ul>
<li><p><code>user+库名</code></p>
<ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/use_database.png" style="zoom:80%;"></li>
</ul>
</li>
<li><p><code>show tables</code></p>
<ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/show_tables.png" style="zoom:80%;"></li>
</ul>
</li>
<li><p><code>show tables from + 库名</code></p>
<ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/show_tables_from.png" style="zoom:80%;"></li>
</ul>
</li>
<li><p><code>create tables</code></p>
<ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/create.png" style="zoom:80%;"></li>
</ul>
</li>
<li><p><code>desc+表名</code></p>
<ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/desc.png" style="zoom:80%;"></li>
</ul>
</li>
<li><p><code>select * from +表名</code></p>
<ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/select.png" style="zoom:80%;"></li>
</ul>
</li>
<li><p><code>insert into + 表名 + (字段1，字段2，...) values(val_1,val_2,...)</code></p>
<ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/insert.png" style="zoom:80%;"></li>
</ul>
</li>
<li><p><code>update + 表名 + set +字段名 = val where 字段名 = val </code></p>
<ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/update.png" style="zoom:80%;"></li>
</ul>
</li>
<li><p><code>delete from + 表名+where + 字段名 = val</code></p>
<ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/delete.png" style="zoom:80%;"></li>
</ul>
</li>
</ul>
</li>
<li></li>
</ol>
]]></content>
      <categories>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>MySql</tag>
      </tags>
  </entry>
  <entry>
    <title>xml基础</title>
    <url>/2021/11/01/xml%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p><strong>xml基础</strong></p>
<span id="more"></span>

<p><strong>思维导图</strong></p>
<p><img src="/2021/11/01/xml%E5%9F%BA%E7%A1%80/xml.png"></p>
<p><strong>基本语法</strong></p>
<ul>
<li>xml文档的后缀名 .xml</li>
<li>xml第一行必须定义为文档声明</li>
<li>xml文档中有且仅有一个根标签</li>
<li>属性值必须使用引号(单双都可)</li>
<li>标签必须正确关闭</li>
<li>xml标签名称区分大小写</li>
</ul>
<p><strong>代码示例</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&#x27;1.0&#x27; ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">&#x27;1&#x27;</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">name</span>&gt;</span>李二狗<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>19<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sex</span>&gt;</span>male<span class="tag">&lt;/<span class="name">sex</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">name</span>&gt;</span>李征明<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>19<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sex</span>&gt;</span>male<span class="tag">&lt;/<span class="name">sex</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>组成部分</strong></p>
<ul>
<li>文档声明<ul>
<li>格式：<code>&lt;?xml 属性列表 ?&gt;</code></li>
</ul>
</li>
<li><h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2></li>
</ul>
]]></content>
      <tags>
        <tag>xml</tag>
      </tags>
  </entry>
  <entry>
    <title>centos7.6安装青龙面板</title>
    <url>/2021/10/07/centos7-6%E5%AE%89%E8%A3%85%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF/</url>
    <content><![CDATA[<p><strong>centos7.6安装青龙面板</strong></p>
<span id="more"></span>

<h3 id="安装所需："><a href="#安装所需：" class="headerlink" title="安装所需："></a>安装所需：</h3><ul>
<li>centos7.6</li>
<li>宝塔远程工具</li>
</ul>
<h3 id="centos7-6安装宝塔面板"><a href="#centos7-6安装宝塔面板" class="headerlink" title="centos7.6安装宝塔面板"></a>centos7.6安装宝塔面板</h3><p><strong>宝塔安装命令</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure>

<p><img src="/2021/10/07/centos7-6%E5%AE%89%E8%A3%85%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E5%AE%89%E8%A3%85.png"></p>
<p><strong>服务器放行端口</strong></p>
<ul>
<li>8888</li>
<li>5700</li>
</ul>
<p><img src="/2021/10/07/centos7-6%E5%AE%89%E8%A3%85%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF/%E6%94%BE%E8%A1%8C%E7%AB%AF%E5%8F%A3.png"></p>
<p><strong>登录宝塔 linux</strong> </p>
<ul>
<li>安装docker</li>
</ul>
<p><img src="/2021/10/07/centos7-6%E5%AE%89%E8%A3%85%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF/%E5%AE%89%E8%A3%85docker.png"></p>
<p><strong>安装青龙面板</strong></p>
<ul>
<li>使用宝塔ssh远程连接</li>
<li>使用以下命令</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -dit \</span><br><span class="line">   -v $PWD/QL/config:/ql/config \</span><br><span class="line">   -v $PWD/QL/log:/ql/log \</span><br><span class="line">   -v $PWD/QL/db:/ql/db \</span><br><span class="line">   -v $PWD/QL/scripts:/ql/scripts \</span><br><span class="line">   --net host \</span><br><span class="line">   --name qinglong \</span><br><span class="line">   --hostname qinglong \</span><br><span class="line">   --restart always \</span><br><span class="line">   whyour/qinglong:latest</span><br></pre></td></tr></table></figure>

<p><img src="/2021/10/07/centos7-6%E5%AE%89%E8%A3%85%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF/%E5%AE%89%E8%A3%85%E9%9D%92%E9%BE%99.png"></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>青龙面板</tag>
      </tags>
  </entry>
  <entry>
    <title>JDBC</title>
    <url>/2021/11/08/Jdbc/</url>
    <content><![CDATA[<p><strong>Jdbc基础知识</strong></p>
<span id="more"></span>

<p>1.<strong>Jdbc的连接</strong></p>
<ul>
<li><p>方式一</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testConnettion</span><span class="params">()</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException </span>&#123;</span><br><span class="line">  </span><br><span class="line">     <span class="comment">// 1.提供三个连接的基本信息 url、user、password</span></span><br><span class="line">  </span><br><span class="line">     String url = <span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>;</span><br><span class="line">     String user = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">     String pass = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">  </span><br><span class="line">     <span class="comment">// 2. 加载Driver</span></span><br><span class="line">     </span><br><span class="line">     Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">  </span><br><span class="line">     <span class="comment">//3. 获取连接</span></span><br><span class="line">  </span><br><span class="line">     Connection con = DriverManager.getConnection(url,user,pass);</span><br><span class="line">  </span><br><span class="line">     System.out.println(con);</span><br><span class="line">  </span><br><span class="line"> &#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li>
<li><p>运行效果</p>
<img src="/2021/11/08/Jdbc/Jdbc_con_1.png" style="zoom:60%;"></li>
<li><p>方式二</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Connection</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 将数据库连接需要的4个基本信息声明在配置文件中，通过读取配置文件的方式，获取连接</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            好处：</span></span><br><span class="line"><span class="comment">            1.实现了数据与代码的分离。实现了解耦。</span></span><br><span class="line"><span class="comment">            2.如果需要修改配置文件信息，可以避免重新打包。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1. 读取配置文件中的4个基本信息</span></span><br><span class="line">        InputStream  is =    ConnectionTest.class.getClassLoader().getResourceAsStream(<span class="string">&quot;Jdbc.properties&quot;</span>);</span><br><span class="line">        Properties pros  =  <span class="keyword">new</span> Properties();</span><br><span class="line">        pros.load(is);</span><br><span class="line">        String user = pros.getProperty(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        String pass = pros.getProperty(<span class="string">&quot;pass&quot;</span>);</span><br><span class="line">        String url = pros.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">        String driver = pros.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.加载驱动</span></span><br><span class="line"></span><br><span class="line">        Class.forName(driver);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.获取连接</span></span><br><span class="line"></span><br><span class="line">        Connection con = DriverManager.getConnection(url,user,pass);</span><br><span class="line">        System.out.println(con);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">properties 中的内容</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            user=root</span></span><br><span class="line"><span class="comment">            pass=123456</span></span><br><span class="line"><span class="comment">            url=jdbc:mysql://localhost:3306/test?characterEncoding=UTF-8</span></span><br><span class="line"><span class="comment">            driver=com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<p>2.<strong>流程图</strong></p>
<p>​    <img src="/2021/11/08/Jdbc/Jdbc流程图.png" style="zoom: 67%;"></p>
<p>3.<strong>PreparedStatement</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    </span><br><span class="line"></span><br><span class="line"> <span class="comment">// 向 customers 中添加数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsert</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Connection con = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line"></span><br><span class="line">            InputStream inputStream = ConnectionTest.class.getClassLoader().getResourceAsStream(<span class="string">&quot;./Jdbc.properties&quot;</span>);</span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            properties.load(inputStream);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取配置信息</span></span><br><span class="line"></span><br><span class="line">            String user = properties.getProperty(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">            String pass = properties.getProperty(<span class="string">&quot;pass&quot;</span>);</span><br><span class="line">            String url = properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">            String driver = properties.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 加载驱动</span></span><br><span class="line"></span><br><span class="line">            Class.forName(driver);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取连接</span></span><br><span class="line"></span><br><span class="line">            con= DriverManager.getConnection(url, user, pass);</span><br><span class="line">            <span class="comment">//           System.out.println(con);</span></span><br><span class="line">            <span class="comment">//          设置插入语句         ?  为占位符</span></span><br><span class="line"></span><br><span class="line">            String sql = <span class="string">&quot;insert into customers (name,email,birth) values(?,?,?)&quot;</span>;</span><br><span class="line"></span><br><span class="line">            ps = con.prepareStatement(sql);</span><br><span class="line">            ps.setString(<span class="number">1</span>,<span class="string">&quot;文光彩&quot;</span>);</span><br><span class="line">            ps.setString(<span class="number">2</span>,<span class="string">&quot;444@163.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置时间格式</span></span><br><span class="line">            SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">            java.util.Date date = sdf.parse(<span class="string">&quot;2001-03-09&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            ps.setDate(<span class="number">3</span>,<span class="keyword">new</span> Date(date.getTime()));</span><br><span class="line"></span><br><span class="line">            <span class="comment">//  执行sql语句 带占位符的为 动态sql</span></span><br><span class="line">            ps.execute();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(con != <span class="keyword">null</span>)</span><br><span class="line">                    con.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">              <span class="keyword">if</span>(ps != <span class="keyword">null</span>) &#123;</span><br><span class="line">                  <span class="keyword">try</span> &#123;</span><br><span class="line">                      ps.close();</span><br><span class="line">                  &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                      e.printStackTrace();</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Jdbc.properties 中的文件</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">user=root</span></span><br><span class="line"><span class="comment">pass=123456</span></span><br><span class="line"><span class="comment">url=jdbc:mysql://localhost:3306/test?characterEncoding=utf8</span></span><br><span class="line"><span class="comment">driver=com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>4.<strong>JdbcUtils</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      获取数据库的连接</span></span><br><span class="line"><span class="comment"> *      释放资源</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        InputStream is = ConnectionTest.class.getClassLoader().getResourceAsStream(<span class="string">&quot;./Jdbc.properties&quot;</span>);</span><br><span class="line">        Properties ps = <span class="keyword">new</span> Properties();</span><br><span class="line">        ps.load(is);</span><br><span class="line">        </span><br><span class="line">     <span class="comment">// ClassLoader.getSystemClassLoader().getResourceAsStream(&quot;./Jdbc.properties&quot;)</span></span><br><span class="line"></span><br><span class="line">        String user = ps.getProperty(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        String pass = ps.getProperty(<span class="string">&quot;pass&quot;</span>);</span><br><span class="line">        String url = ps.getProperty(<span class="string">&quot;ur l&quot;</span>);</span><br><span class="line">        String driver = ps.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Class.forName(driver);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url,user,pass);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">closeResource</span><span class="params">(Connection con, Statement ps)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ps != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                ps.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(con != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                con.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>5.<strong>Update 通用增删改</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(String sql, Object ...args)</span> </span>&#123;</span><br><span class="line">     <span class="comment">// sql中占位符的个数与可变形参的长度相同</span></span><br><span class="line">     Connection con = <span class="keyword">null</span>;</span><br><span class="line">     PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">try</span> &#123;</span><br><span class="line">         <span class="comment">// 1. 获取数据库的连接</span></span><br><span class="line">         con = JdbcUtil.getConnection();</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 2.预编译的sql语句，返回PreparedStatement的实例。</span></span><br><span class="line"></span><br><span class="line">         ps = con.prepareStatement(sql);</span><br><span class="line">         <span class="comment">// 3.填充占位符</span></span><br><span class="line">         <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;args.length;i++)&#123;</span><br><span class="line">             ps.setObject(i+<span class="number">1</span>,args[i]);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">//4.执行</span></span><br><span class="line">         ps.execute();</span><br><span class="line">     &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">         e.printStackTrace();</span><br><span class="line">     &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">         <span class="comment">//5.资源的关闭</span></span><br><span class="line">         JdbcUtil.closeResource(con,ps);</span><br><span class="line">     &#125;</span><br><span class="line">    </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>







<p>5.<strong>Resultset 通用查询</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">		此通用查询仅仅实现了单个查询</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">import</span> com.edu.zzuli.bean.Customer;</span><br><span class="line"><span class="keyword">import</span> com.edu.zzuli.util.JdbcUtil;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSetMetaData;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Query</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryCustomer</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;select * from customers where id = ? and name=?&quot;</span>;</span><br><span class="line">        Customer customer = queryCustomers(sql, <span class="number">6</span>,<span class="string">&quot;文光彩&quot;</span>);</span><br><span class="line">        System.out.println(customer);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Customer <span class="title">queryCustomers</span><span class="params">(String sql,Object ... args)</span>  </span>&#123;</span><br><span class="line">        Connection con = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 获取连接</span></span><br><span class="line">            con = JdbcUtil.getConnection();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 获取预编译的preparedStatement对象</span></span><br><span class="line">            ps = con.prepareStatement(sql);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 为占位符设置值</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt; args.length;i++)&#123;</span><br><span class="line">                ps.setObject(i+<span class="number">1</span>,args[i]);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 执行查询数据</span></span><br><span class="line">            rs = ps.executeQuery();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取结果集的元数据，通过元数据获取类名和列数</span></span><br><span class="line">            ResultSetMetaData rsmd = rs.getMetaData();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取列数</span></span><br><span class="line">            <span class="keyword">int</span> columnCount = rsmd.getColumnCount();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">                Customer customer = <span class="keyword">new</span> Customer();</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;columnCount;i++)&#123;</span><br><span class="line">					</span><br><span class="line">                    <span class="comment">// 获取每列的值</span></span><br><span class="line">                    Object columnValue = rs.getObject(i + <span class="number">1</span>);</span><br><span class="line">                    </span><br><span class="line">                    </span><br><span class="line">                    <span class="comment">// 获取每个列的类名</span></span><br><span class="line">                    String columnName = rsmd.getColumnName(i+<span class="number">1</span>);</span><br><span class="line">                    </span><br><span class="line">                    <span class="comment">//  通过反射获取Customer类的属性值</span></span><br><span class="line">                    </span><br><span class="line">                    Field field = Customer.class.getDeclaredField(columnName);</span><br><span class="line">                    </span><br><span class="line">                    <span class="comment">//	修改属性值的权限，若不修改则可能会报错，若是此属性值为private则必须修改。</span></span><br><span class="line">                    field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                    </span><br><span class="line">                    <span class="comment">// 给customer对象的某个属性,赋值为value.</span></span><br><span class="line">                    field.set(customer,columnValue);</span><br><span class="line">                  </span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> customer;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            JdbcUtil.closeResource(con,ps,rs);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>** 查询示例**</p>
<img src="/2021/11/08/Jdbc/select.png" style="zoom:60%;">

<p>6.<strong>Customer类的封装</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.edu.zzuli.bean;</span><br><span class="line"><span class="comment">// bean 数据私有，只有get、set、构造器</span></span><br><span class="line"><span class="comment">// control alt T 快速构建代码</span></span><br><span class="line"><span class="comment">// alt insert 生成代码</span></span><br><span class="line"><span class="keyword">import</span> java.sql.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  ORM 编程思想(object relational mapping)</span></span><br><span class="line"><span class="comment"> *  一个数据表对应一个java类</span></span><br><span class="line"><span class="comment"> *  表中的一条记录对应java类的一个对象</span></span><br><span class="line"><span class="comment"> *  表中的一个字段对应java类的一个属性</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Customer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> Date birth;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Customer</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Customer</span><span class="params">(<span class="keyword">int</span> id, String name, String email, Date birth)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">        <span class="keyword">this</span>.birth = birth;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getBirth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> birth;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBirth</span><span class="params">(Date birth)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.birth = birth;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Customer&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, email=&#x27;&quot;</span> + email + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, birth=&quot;</span> + birth +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>Order查询</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.edu.zzuli.query;</span><br><span class="line"><span class="keyword">import</span> com.edu.zzuli.bean.Order;</span><br><span class="line"><span class="keyword">import</span> com.edu.zzuli.util.JdbcUtil;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSetMetaData;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryOrder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">queryOrder</span><span class="params">(String sql,Object... args)</span></span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">           conn = JdbcUtil.getConnection();</span><br><span class="line"></span><br><span class="line">           ps = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;args.length;i++)&#123;</span><br><span class="line">                ps.setObject(i+<span class="number">1</span>,args[i]);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            rs = ps.executeQuery();</span><br><span class="line"></span><br><span class="line">            ResultSetMetaData rsmd = rs.getMetaData();</span><br><span class="line">            <span class="keyword">int</span> length = rsmd.getColumnCount();</span><br><span class="line">            <span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">                Order order = <span class="keyword">new</span> Order();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;length;i++)&#123;</span><br><span class="line"></span><br><span class="line">                    Object columnValue = rs.getObject(i + <span class="number">1</span>);</span><br><span class="line">					<span class="comment">// 这里使用了getColumnLable 查询字段名的别名</span></span><br><span class="line">                    String columnLabel = rsmd.getColumnLabel(i + <span class="number">1</span>);</span><br><span class="line">                    </span><br><span class="line">                    Field field = Order.class.getDeclaredField(columnLabel);</span><br><span class="line">                    </span><br><span class="line">                    field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                    </span><br><span class="line">                    field.set(order,columnValue);</span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> order;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtil.closeResource(conn,ps,rs);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQuery</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 这里为字段名起别名</span></span><br><span class="line">        </span><br><span class="line">        String sql = <span class="string">&quot;select order_name orderName,order_email orderEmail,order_date orderDate from `order` where order_id = ? &quot;</span>;</span><br><span class="line">        Order order = queryOrder(sql, <span class="number">1</span>);</span><br><span class="line">        System.out.println(order);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Order类的封装</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.edu.zzuli.bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Order</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String orderName;</span><br><span class="line">    <span class="keyword">private</span> String orderEmail;</span><br><span class="line">    <span class="keyword">private</span> Date orderDate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Order</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Order</span><span class="params">(<span class="keyword">int</span> id, String orderName, String orderEmail, Date orderDate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.orderName = orderName;</span><br><span class="line">        <span class="keyword">this</span>.orderEmail = orderEmail;</span><br><span class="line">        <span class="keyword">this</span>.orderDate = orderDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getOrderName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> orderName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOrderName</span><span class="params">(String orderName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.orderName = orderName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getOrderEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> orderEmail;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOrderEmail</span><span class="params">(String orderEmail)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.orderEmail = orderEmail;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getOrderDate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> orderDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOrderDate</span><span class="params">(Date orderDate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.orderDate = orderDate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Order&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, orderName=&#x27;&quot;</span> + orderName + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, orderEmail=&#x27;&quot;</span> + orderEmail + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, orderDate=&quot;</span> + orderDate +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>不同表的通用查询</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.edu.zzuli.query;</span><br><span class="line"><span class="keyword">import</span> com.edu.zzuli.bean.Customer;</span><br><span class="line"><span class="keyword">import</span> com.edu.zzuli.util.JdbcUtil;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSetMetaData;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	</span></span><br><span class="line"><span class="comment">	使用泛型 </span></span><br><span class="line"><span class="comment">	</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeneralQuery</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String sql  = <span class="string">&quot;select id,name,email from customers where id &lt; ?&quot;</span>;</span><br><span class="line">        List&lt;Customer&gt; customers = generalQuery(Customer.class, sql, <span class="number">6</span>);</span><br><span class="line">        <span class="keyword">for</span> (Customer name:customers) &#123;</span><br><span class="line">            System.out.println(name.getName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">List&lt;E&gt; <span class="title">generalQuery</span><span class="params">(Class&lt;E&gt; clazz, String sql, Object ...args)</span>   </span>&#123;</span><br><span class="line"></span><br><span class="line">        Connection conn = <span class="keyword">null</span>; </span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtil.getConnection();</span><br><span class="line"></span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;args.length;i++)&#123;</span><br><span class="line">                ps.setObject(i+<span class="number">1</span>,args[i]);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            rs = ps.executeQuery();</span><br><span class="line"></span><br><span class="line">            ResultSetMetaData rsmd = rs.getMetaData();</span><br><span class="line">            <span class="keyword">int</span> length = rsmd.getColumnCount();</span><br><span class="line">            ArrayList&lt;E&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line"></span><br><span class="line">                E t = clazz.newInstance();</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;length;i++)&#123;</span><br><span class="line"></span><br><span class="line">                    Object columnValue = rs.getObject(i + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                    String columnLabel = rsmd.getColumnLabel(i + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                    Field field = clazz.getDeclaredField(columnLabel);</span><br><span class="line"></span><br><span class="line">                    field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line"> </span><br><span class="line">                    field.set(t,columnValue);</span><br><span class="line">                &#125;</span><br><span class="line">                list.add(t);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> list;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtil.closeResource(conn,ps,rs);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>使用preparedStatement存入二进制文件</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsert</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">// 获取连接</span></span><br><span class="line">      Connection conn = JdbcUtil.getConnection();</span><br><span class="line">      </span><br><span class="line">      String sql = <span class="string">&quot;insert into customers(name,email,birth,picture) values (?,?,?,?)&quot;</span>;</span><br><span class="line">      </span><br><span class="line">      PreparedStatement ps = conn.prepareStatement(sql);</span><br><span class="line">      <span class="comment">// 设置占位符的内容</span></span><br><span class="line">      ps.setObject(<span class="number">1</span>,<span class="string">&quot;李征明&quot;</span>);</span><br><span class="line">      ps.setObject(<span class="number">2</span>,<span class="string">&quot;2210883511@163.com&quot;</span>);</span><br><span class="line">      ps.setObject(<span class="number">3</span>,<span class="string">&quot;2001-09-08&quot;</span>);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 以流的方式读入文件</span></span><br><span class="line">      FileInputStream is = <span class="keyword">new</span> FileInputStream(<span class="keyword">new</span> File(<span class="string">&quot;src/2021-10-08-11-33-00_0.png&quot;</span>));</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 为占位符设置内容</span></span><br><span class="line">      ps.setObject(<span class="number">4</span>,is);</span><br><span class="line">      ps.execute();</span><br><span class="line">      JdbcUtil.closeResource(conn,ps);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//把图片从数据库上下载下来</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        InputStream is = <span class="keyword">null</span>;</span><br><span class="line">        FileOutputStream fos = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtil.getConnection();</span><br><span class="line">            String sql = <span class="string">&quot;select * from customers where id = 12&quot;</span>;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line">            rs = ps.executeQuery();</span><br><span class="line">            <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">                <span class="keyword">int</span> id = rs.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">                String name = rs.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">                String email = rs.getString(<span class="string">&quot;email&quot;</span>);</span><br><span class="line">                Date date = rs.getDate(<span class="string">&quot;birth&quot;</span>);</span><br><span class="line">                Customer customer = <span class="keyword">new</span> Customer(id, name, email, date);</span><br><span class="line">                System.out.println(customer);</span><br><span class="line">                Blob picture = rs.getBlob(<span class="string">&quot;picture&quot;</span>);</span><br><span class="line">                is = picture.getBinaryStream();</span><br><span class="line">                fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;lizhengming.png&quot;</span>);</span><br><span class="line">                <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="keyword">int</span> len;</span><br><span class="line">                <span class="keyword">while</span> ((len = is.read(bytes)) != -<span class="number">1</span>) &#123;</span><br><span class="line"></span><br><span class="line">                    fos.write(bytes, <span class="number">0</span>, le n);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">                JdbcUtil.closeResource(conn,ps,rs);</span><br><span class="line">                fos.close();</span><br><span class="line">                is.close();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<p><strong>使用preparedStatement实现批量插入操作</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 方式二</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">teseInsert</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            Connection conn = <span class="keyword">null</span>;</span><br><span class="line">            PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn = JdbcUtil.getConnection();</span><br><span class="line"></span><br><span class="line">                String sql = <span class="string">&quot;insert into goods (name) values(?)&quot;</span>;</span><br><span class="line"></span><br><span class="line">                ps = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;<span class="number">200</span>;i++) &#123;</span><br><span class="line"></span><br><span class="line">                    ps.setObject(<span class="number">1</span>, <span class="string">&quot;name_&quot;</span> + i);</span><br><span class="line"></span><br><span class="line">                    ps.execute();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">                JdbcUtil.closeResource(conn,ps);</span><br><span class="line">            &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	使用 statement 批量插入数据 方式一</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                   Statement st = conn.createStatement();</span></span><br><span class="line"><span class="comment">                	 for(int i =1;i&lt;200; i++)&#123;</span></span><br><span class="line"><span class="comment">                       String sql2 = &quot;insert into goods (name) values (&#x27;name_&quot;+i+&quot;&#x27;)&quot;;</span></span><br><span class="line"><span class="comment">                      st.execute(sql2);                </span></span><br><span class="line"><span class="comment">                      </span></span><br><span class="line"><span class="comment">                             </span></span><br><span class="line"><span class="comment">               &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p><strong>数据库事务</strong></p>
<ul>
<li><p>什么叫数据库事务？</p>
<ul>
<li>事务：一组逻辑操作单元，使数据从一种状态变换到另一种状态。</li>
<li>一组逻辑操作单元：一个或者多个DML操作。</li>
<li>事务处理（事务操作）：当在一个事务中执行一个或者多个操作时，要么所有的事务都被提交（commmit），那么这些修改就可以永久的保存下来；要么数据库管理系统将放弃所做的所有修改，整个事务回滚（rollback）到最初状态。</li>
<li>数据一旦提交，就不可回滚。</li>
</ul>
</li>
<li><p>哪些操作会导致数据的自动提交？</p>
<ul>
<li>DDL操作一旦执行，都会自动提交(DDL:数据库定义语言)<ul>
<li>set autocommit = false 对DDl默认失效</li>
</ul>
</li>
<li>DML默认情况下，一旦执行就会提交。（DML：数据库操纵语言）<ul>
<li>set autocommit = false  取消DML操作的自动提交</li>
</ul>
</li>
<li>默认在关闭连接时，会自动的提交 </li>
</ul>
<p><strong>针对数据库事务的增删改</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testUpdateWithTx</span><span class="params">()</span>   </span>&#123;</span><br><span class="line">       Connection conn = <span class="keyword">null</span>;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtil.getConnection();</span><br><span class="line">           System.out.println(conn.getAutoCommit());</span><br><span class="line">  </span><br><span class="line">           <span class="comment">// 1.取消数据的自动提交</span></span><br><span class="line">           conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">  </span><br><span class="line">           String sql1 = <span class="string">&quot;update user_table set balance = balance - 100 where id = ?&quot;</span>;</span><br><span class="line">           updateTx(conn,sql1,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">  </span><br><span class="line">           <span class="comment">// System.out.println(10/0);   模拟网络异常</span></span><br><span class="line">           String sql2 = <span class="string">&quot;update user_table set balance = balance + 100 where id = ?&quot;</span>;</span><br><span class="line">           updateTx(conn,sql2,<span class="number">2</span>);</span><br><span class="line">  </span><br><span class="line">           System.out.println(<span class="string">&quot;转账成功！&quot;</span>);</span><br><span class="line">  </span><br><span class="line">           <span class="comment">// 2.提交数据</span></span><br><span class="line">           conn.commit();</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               <span class="comment">// 3.回滚数据</span></span><br><span class="line">               conn.rollback();</span><br><span class="line">           &#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span><br><span class="line">               ex.printStackTrace();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">               conn.setAutoCommit(<span class="keyword">true</span>);</span><br><span class="line">           &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">               e.printStackTrace();</span><br><span class="line">           &#125;</span><br><span class="line">           JdbcUtil.closeResource(conn,<span class="keyword">null</span>);</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">   &#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span>  <span class="title">updateTx</span><span class="params">(Connection con,String sql, Object ...args)</span> </span>&#123;</span><br><span class="line">     <span class="comment">// sql中占位符的个数与可变形参的长度相同</span></span><br><span class="line">     PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">  </span><br><span class="line">     <span class="keyword">try</span> &#123;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">         <span class="comment">// 2.预编译的sql语句，返回PreparedStatement的实例。</span></span><br><span class="line">  </span><br><span class="line">         ps = con.prepareStatement(sql);</span><br><span class="line">         <span class="comment">// 3.填充占位符</span></span><br><span class="line">         <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;args.length;i++)&#123;</span><br><span class="line">             ps.setObject(i+<span class="number">1</span>,args[i]);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">//4.执行</span></span><br><span class="line">         ps.execute();</span><br><span class="line">     &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">         e.printStackTrace();</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<p><strong>运行截图</strong></p>
<img src="/2021/11/08/Jdbc/事务1.png" style="zoom:60%;">



<img src="/2021/11/08/Jdbc/事务2.png" style="zoom:60%;">

<p><strong>模拟异常截图</strong></p>
<img src="/2021/11/08/Jdbc/模拟异常.png" style="zoom:60%;">



<img src="/2021/11/08/Jdbc/模拟异常2.png" style="zoom:60%;">





 

<p>7.<strong>Java与Sql对应数据类型转换表</strong></p>
<table>
<thead>
<tr>
<th align="center">Java类型</th>
<th align="center">Sql类型</th>
</tr>
</thead>
<tbody><tr>
<td align="center">boolean</td>
<td align="center">BIT</td>
</tr>
<tr>
<td align="center">byte</td>
<td align="center">TINYINT</td>
</tr>
<tr>
<td align="center">short</td>
<td align="center">SMALLINT</td>
</tr>
<tr>
<td align="center">int</td>
<td align="center">INTEGER</td>
</tr>
<tr>
<td align="center">long</td>
<td align="center">BIGINT</td>
</tr>
<tr>
<td align="center">String</td>
<td align="center">CHAR,VARCHAR,LONGVARCHAR</td>
</tr>
<tr>
<td align="center">byte array</td>
<td align="center">BINARY,VAR BINARY</td>
</tr>
<tr>
<td align="center">java.sql.Date</td>
<td align="center">DATE</td>
</tr>
<tr>
<td align="center">java.sql.Time</td>
<td align="center">TIME</td>
</tr>
<tr>
<td align="center">java.sql.Timestamp</td>
<td align="center">TIMESTAMP</td>
</tr>
</tbody></table>
<p><strong>事物的ACID属性</strong></p>
<ul>
<li>原子性（Atomicity）<ul>
<li>原子性是指事务是一个不可分割的工作单位，事务中的操作要么都发生，要么都不发生。</li>
</ul>
</li>
<li>一致性（Consistency）<ul>
<li>事务必须使数据库从一个一致性状态变换到另一个一致性状态。</li>
</ul>
</li>
<li>隔离性（lsolation）<ul>
<li>事务的隔离性是指一个事务的执行不能被其他事务干扰，即一个事务内部的操作及使用的数据对并发的其他事务是隔离的，并发执行的各个事务之间不能相互干扰。</li>
</ul>
</li>
<li>持久性（Durability）<ul>
<li>持久性是指一个事务一旦被提交，它对数据库中的数据的改变就是永久性的，接下来的其他操作和数据库故障不应该对其有任何影响。</li>
</ul>
</li>
</ul>
<p><strong>数据库的并发问题</strong></p>
<ul>
<li>对于同时运行的多个事务，当这些事务访问数据库中相同的数据时，如果没有采取必要的隔离机制，就会导致各种并发问题：<ul>
<li><strong>脏读</strong>：对于两个事务T1、T2，T1已经读取了已经被T2更新但还<strong>没有被提交</strong>的字段。之后，若T2回滚，T1读取的内容就是临时且无效的。</li>
<li><strong>不可重复读</strong>：对于两个事务T1、T2，T1读取了一个字段，然后T2<strong>更新</strong>了该字段。之后，T1再次读取同一个字段，值就不同了。</li>
<li><strong>幻读</strong>：对于两个事务T1、T2，T1从一个表中读取了一个字段，然后T2在该表中<strong>插入</strong>了一些新的行。之后如果T1再次读取同一个表，就会多出几行。</li>
</ul>
</li>
<li><strong>数据库事务的隔离性</strong>：数据库系统必须具有隔离并开发运行各个事务的能力，使他们不会相互影响，避免各种并发问题。</li>
<li>一个事务与其他事务隔离的程度称为隔离级别。数据库规定了多种事务隔离级别，不同隔离级别对应不同的干扰程度，<strong>隔离级别越高，数据一致性就越好，但并发性越弱</strong>。</li>
</ul>
<p><strong>四种隔离级别</strong></p>
<ul>
<li>数据库提供的4中事务隔离级别</li>
</ul>
<table>
<thead>
<tr>
<th><strong>隔离级别</strong></th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>READ UNCOMMITTED  (读未提交数据)</td>
<td>允许事务读取违背其他事务提交的变更，脏读，不可重复读和幻读的问题都会出现</td>
</tr>
<tr>
<td>READ COMMITED （读已提交数据）</td>
<td>只允许事务读取已经被其他事务提交的变更，可以避免脏读，但不可重复读和幻读问题仍然可能出现</td>
</tr>
<tr>
<td>REPEATABLE READ（可重复读）</td>
<td>确保事务可以多次从一个字段中读取相同的值，在这个事务持续期间，禁止其他事务对这个字段进行更新，可以避免脏读和不可重复读，但幻读的问题依然存在。</td>
</tr>
<tr>
<td>SERIALIZABLE（串行化）</td>
<td>确保事务可以从一个表中读取相同的行，在这个事务持续期间，禁止其他事务对该表执行插入，更新和删除操作，所有并发问题都可以避免，但性能十分低下。</td>
</tr>
</tbody></table>
<p><strong>隔离级别在Jdbc的体现</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTransactionSelect</span><span class="params">()</span> <span class="keyword">throws</span>  Exception</span>&#123;</span><br><span class="line">    Connection conn = JdbcUtil.getConnection();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取当前连接的隔离级别</span></span><br><span class="line">    System.out.println(conn.getTransactionIsolation());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置数据库的隔离级别</span></span><br><span class="line">    conn.setTransactionIsolation(Connection.TRANSACTION_READ_COMMITTED);</span><br><span class="line"></span><br><span class="line">    conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">    String sql = <span class="string">&quot;select * from goods where id = ?&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    Goods goods = getInstance(conn,Goods.class,sql,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    System.out.println(goods);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>BaseDAO代码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.edu.zzuli.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.edu.zzuli.util.JdbcUtil;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  封装了针对数据表的通用操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseDAO</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通用的增删改</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(Connection conn, String sql, Object... args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; args.length; i++) &#123;</span><br><span class="line">                ps.setObject(i + <span class="number">1</span>, args[i]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> ps.executeUpdate();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtil.closeResource(<span class="keyword">null</span>,ps);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 通用的查询，查询单个</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">queryGeneral</span><span class="params">(Connection conn,Class&lt;T&gt; clazz,String sql,Object ...args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        PreparedStatement ps =<span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">             ps = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;args.length;i++)&#123;</span><br><span class="line">                ps.setObject(i+<span class="number">1</span>,i);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">             rs = ps.executeQuery();</span><br><span class="line"></span><br><span class="line">            ResultSetMetaData rsmd = rs.getMetaData();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> len = rsmd.getColumnCount();</span><br><span class="line">            <span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">                T t = clazz.newInstance();</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">                   Object value = rs.getObject(i+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                    String name = rsmd.getColumnLabel(i + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                    Field field = clazz.getDeclaredField(name);</span><br><span class="line"></span><br><span class="line">                    field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">                    field.set(t,value);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                    <span class="keyword">return</span> t;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtil.closeResource(<span class="keyword">null</span>,ps,rs);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 通用的查询，查询多个</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">queryGeneralMore</span><span class="params">(Connection conn, Class&lt;T&gt; clazz, String sql, Object ...args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        PreparedStatement ps =<span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 填充占位符</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;args.length;i++)&#123;</span><br><span class="line">                ps.setObject(i+<span class="number">1</span>,i);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 执行查询语句</span></span><br><span class="line">            rs = ps.executeQuery();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取元数据</span></span><br><span class="line">            ResultSetMetaData rsmd = rs.getMetaData();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取列数</span></span><br><span class="line">            <span class="keyword">int</span> len = rsmd.getColumnCount();</span><br><span class="line">            T t =<span class="keyword">null</span>;</span><br><span class="line">            ArrayList&lt;T&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">                 t = clazz.newInstance();</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 获取查询到的每一行字段的值</span></span><br><span class="line">                    Object value = rs.getObject(i+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 获取字段名</span></span><br><span class="line">                    String name = rsmd.getColumnLabel(i + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 获取该类的属性</span></span><br><span class="line">                    Field field = clazz.getDeclaredField(name);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 修改属性为可操作</span></span><br><span class="line">                    field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 为该类的实例对象的属性赋值</span></span><br><span class="line">                    field.set(t,value);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 把示例对象添加到集合中</span></span><br><span class="line">                list.add(t);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> list;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtil.closeResource(<span class="keyword">null</span>,ps,rs);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 用于查询特殊值的通用方法</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">E <span class="title">getValue</span><span class="params">(Connection conn,String sql,Object ...args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        PreparedStatement ps =<span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">             ps = conn.prepareStatement(sql);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;args.length;i++)&#123;</span><br><span class="line">                ps.setObject(i+<span class="number">1</span>,i);</span><br><span class="line">            &#125;</span><br><span class="line">             rs = ps.executeQuery();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">                <span class="keyword">return</span> (E)rs.getObject(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtil.closeResource(<span class="keyword">null</span>,ps,rs);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>BaseDAO</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.edu.zzuli.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.edu.zzuli.util.JdbcUtil;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  封装了针对数据表的通用操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseDAO</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通用的增删改</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(Connection conn, String sql, Object... args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; args.length; i++) &#123;</span><br><span class="line">                ps.setObject(i + <span class="number">1</span>, args[i]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> ps.executeUpdate();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtil.closeResource(<span class="keyword">null</span>,ps);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 通用的查询，查询单个</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">queryGeneral</span><span class="params">(Connection conn,Class&lt;T&gt; clazz,String sql,Object ...args)</span> </span>&#123;</span><br><span class="line">        PreparedStatement ps =<span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">             ps = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;args.length;i++)&#123;</span><br><span class="line">                ps.setObject(i+<span class="number">1</span>,args[i]);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">             rs = ps.executeQuery();</span><br><span class="line">            ResultSetMetaData rsmd = rs.getMetaData();</span><br><span class="line">            <span class="keyword">int</span> len = rsmd.getColumnCount();</span><br><span class="line">            <span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;开始添加&quot;</span>);</span><br><span class="line">                T t = clazz.newInstance();</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">                   Object value = rs.getObject(i+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                    String name = rsmd.getColumnLabel(i + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                    Field field = clazz.getDeclaredField(name);</span><br><span class="line"></span><br><span class="line">                    field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">                    field.set(t,value);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> t;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtil.closeResource(<span class="keyword">null</span>,ps,rs);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 通用的查询，查询多个</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">queryGeneralMore</span><span class="params">(Connection conn, Class&lt;T&gt; clazz, String sql, Object ...args)</span></span>&#123;</span><br><span class="line">        PreparedStatement ps =<span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ps = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 填充占位符</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;args.length;i++)&#123;</span><br><span class="line">                ps.setObject(i+<span class="number">1</span>,i);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 执行查询语句</span></span><br><span class="line">            rs = ps.executeQuery();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取元数据</span></span><br><span class="line">            ResultSetMetaData rsmd = rs.getMetaData();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取列数</span></span><br><span class="line">            <span class="keyword">int</span> len = rsmd.getColumnCount();</span><br><span class="line">            T t =<span class="keyword">null</span>;</span><br><span class="line">            ArrayList&lt;T&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">                 t = clazz.newInstance();</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 获取查询到的每一行字段的值</span></span><br><span class="line">                    Object value = rs.getObject(i+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 获取字段名</span></span><br><span class="line">                    String name = rsmd.getColumnLabel(i + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 获取该类的属性</span></span><br><span class="line">                    Field field = clazz.getDeclaredField(name);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 修改属性为可操作</span></span><br><span class="line">                    field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 为该类的实例对象的属性赋值</span></span><br><span class="line">                    field.set(t,value);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 把示例对象添加到集合中</span></span><br><span class="line">                list.add(t);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> list;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtil.closeResource(<span class="keyword">null</span>,ps,rs);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 用于查询特殊值的通用方法</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">E <span class="title">getValue</span><span class="params">(Connection conn,String sql,Object ...args)</span></span>&#123;</span><br><span class="line">        PreparedStatement ps =<span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">             ps = conn.prepareStatement(sql);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;args.length;i++)&#123;</span><br><span class="line">                ps.setObject(i+<span class="number">1</span>,i);</span><br><span class="line">            &#125;</span><br><span class="line">             rs = ps.executeQuery();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">                <span class="keyword">return</span> (E)rs.getObject(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;   </span><br><span class="line">            JdbcUtil.closeResource(<span class="keyword">null</span>,ps,rs);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>CustomerDAO</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.edu.zzuli.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.edu.zzuli.bean.Customer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  此接口用于规范针对于customers表的常用操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span>   <span class="title">CustomerDAO</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将cust对象添加到数据库中</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> customer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(Connection conn, Customer customer)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteById</span> <span class="params">(Connection conn,<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 针对内存中的cust对象，去修改数据表中指定的记录</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> customer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(Connection conn,Customer customer)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 针对指定的id查询得到Customer对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Customer <span class="title">getCustomerById</span><span class="params">(Connection conn, <span class="keyword">int</span> id)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询记录表中所有记录构成的集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Customer&gt; <span class="title">getAll</span><span class="params">(Connection conn)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回数据表中数据的条目数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Long <span class="title">getCount</span><span class="params">(Connection conn)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>CustomerDAOImpl</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.edu.zzuli.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.edu.zzuli.bean.Customer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: lizhengming</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2021/11/12/12:34</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:针对于Custoemr表的一些操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomerDAOImpl</span> <span class="keyword">extends</span> <span class="title">BaseDAO</span> <span class="keyword">implements</span> <span class="title">CustomerDAO</span>   </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(Connection conn, Customer customer)</span> </span>&#123;</span><br><span class="line">        String sql =<span class="string">&quot;insert into customers(name,email,birth) values(?,?,?)&quot;</span>;</span><br><span class="line"></span><br><span class="line">        update(conn,sql,customer.getName(),customer.getEmail(), customer.getBirth());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteById</span><span class="params">(Connection conn, <span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        String sql =<span class="string">&quot;delete from customers where id =?&quot;</span>;</span><br><span class="line">        update(conn,sql,id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Connection conn, Customer customer)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        String sql =<span class="string">&quot;update customers set name=?,email=?,birth=? where id = ? &quot;</span>;</span><br><span class="line">        update(conn,sql,customer.getName(),customer.getEmail(),customer.getBirth(),customer.getId());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Customer <span class="title">getCustomerById</span><span class="params">(Connection conn, <span class="keyword">int</span> id)</span>  </span>&#123;</span><br><span class="line"></span><br><span class="line">        String sql = <span class="string">&quot;select id ,name,email,birth from customers where id = ? &quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> queryGeneral(conn,Customer.class,sql,id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Customer&gt; <span class="title">getAll</span><span class="params">(Connection conn)</span> </span>&#123;</span><br><span class="line">        String sql =<span class="string">&quot;select id,name,email,birth from customers &quot;</span>;</span><br><span class="line">       <span class="keyword">return</span>  queryGeneralMore(conn,Customer.class,sql);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getCount</span><span class="params">(Connection conn)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;select count(*) from customers&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> getValue(conn, sql);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>优化</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseDAO</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> Class&lt;T&gt; clazz = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        Type type = <span class="keyword">this</span>.getClass().getGenericSuperclass();</span><br><span class="line">        ParameterizedType paramType = (ParameterizedType) type;</span><br><span class="line">        Type[] typeArguments = paramType.getActualTypeArguments();</span><br><span class="line">        clazz = (Class&lt;T&gt;) typeArguments[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> class CustomerDAOImpl extends BaseDAO&lt;Customer&gt; implements CustomerDAO </span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function"><span class="keyword">public</span>  T <span class="title">queryGeneral</span><span class="params">(Connection conn,String sql,Object ...args)</span> </span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">    <span class="comment">// 传值不再需要 Customer.class</span></span></span><br></pre></td></tr></table></figure>





<p><strong>JDBC数据库连接池的必要性</strong></p>
<ul>
<li>在使用开发基于数据库的web程序时，传统的模式基本是按照以下步骤：<ul>
<li>在主程序（servlet、beans）中建立数据库连接</li>
<li>进行sql操作</li>
<li>断开数据库连接</li>
</ul>
</li>
<li>这种开发模式存在的问题：<ul>
<li>普通的JDBC数据库连接使用<strong>DriverManager</strong>来获取，每次向数据库建立连接都要将<strong>Connection加载到内存中</strong>，验证用户名和密码。需要数据库连接的时候就<strong>创建连接</strong>，执行完<strong>再断开连接</strong>。这样的方式会<strong>消耗大量的资源和时间</strong>。数据库<strong>连接资源并没有得到很好的重复利用</strong></li>
<li><strong>对于每一次数据库连接，使用完后都得断开</strong>。否则，如果程序出现异常而未能关闭，将会导致数据库系统中的内存泄漏，最终将导致重启数据库。</li>
<li><strong>这种开发不能控制被创建的连接对象数</strong>，系统资源会被毫无顾及的分配出去，如连接过多，也可能导致内存泄漏，服务器崩溃。</li>
</ul>
</li>
</ul>
<p><strong>数据库连接池技术</strong></p>
<ul>
<li>为解决传统开发中的数据库连接问题，可以采用数据库连接池技术</li>
<li><strong>数据库连接池的基本思想</strong>：就是为数据库建立一个“<strong>缓冲池</strong>”。预先在缓冲池中放入一定数量的连接，当需要建立数据库连接时，只需从“缓冲池”中取出来一个，使用完毕之后再放回去。</li>
<li><strong>数据库连接池</strong>负责分配、管理和释放数据库连接，，<strong>它允许应用程序重复使用一个现有的数据库连接，而不是重新建立一个</strong>。</li>
<li>数据库连接池在初始化时将创建一定数量的数据库连接放到连接池中，这些数据库连接的数量是<strong>由最小数据库连接数来设定的</strong>。无论这些数据库连接是否被使用，连接池都将一直保证至少拥有这么多的连接数量。<strong>连接池的最大数据库连接数量</strong>限定了这个连接池能占有的最大连接数，当应用程序向连接池请求的连接数<strong>超过最大连接数量时</strong>，这些<strong>请求将被加入到等待队列中。</strong></li>
<li>示例</li>
</ul>
<img src="/2021/11/08/Jdbc/数据库连接池.png" style="zoom: 50%;">

<ul>
<li><p>工作原理：</p>
<img src="/2021/11/08/Jdbc/工作原理.png" style="zoom:50%;"></li>
</ul>
<p><strong>多种开源的数据库连接池</strong></p>
<ul>
<li>JDBC的数据库连接池使用javax.sql.DataSource来表示，DateSource只是一个接口，该接口通常由服务器提供实现：<ul>
<li><strong>DBCP</strong>是Apache提供的数据库连接池。<strong>tomcat服务器</strong>自带dbcp数据库连接池。<strong>速度相对c3p0较快</strong>，但因自身存在bug，Hibernate3已不再提供支持。</li>
<li><strong>c3p0</strong>是一个开源组织提供的一个数据库连接池，<strong>速度相对较慢</strong>，<strong>稳定性还可以</strong>。Hibernate官方推荐使用</li>
<li><strong>Proxool</strong>是sourceforge下的一个开源项目数据库连接池，有监控连接池状态的功能，<strong>稳定性较c3p0差一些</strong></li>
<li><strong>BoneCP</strong>是一个开源组织提供的数据库连接池，速度快。</li>
<li><strong>Druid</strong>是阿里提供的数据库连接池，据说是集DBCP、C3P0、Proxool优点于一身的数据库连接池，但是速度不确定是否有BoneCP快</li>
</ul>
</li>
<li>DateSource通常被称为数据源，它包含连接池和连接池管理两个部分，习惯上也叫连接池</li>
<li><strong>DateSource用来取代DriverManager来获取Connection，获取速度快，同时可以大幅度提高数据库访问速度</strong></li>
</ul>
<p><strong>c3p0数据库连接池创建连接</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.edu.zzuli.connection;</span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.DataSources;</span><br><span class="line"><span class="keyword">import</span> java.beans.PropertyVetoException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: lizhengming</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2021/11/12/20:40</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C3P0Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span>:c3p0连接方式一</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Author</span>: lizhengming</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Date</span>:   2021/11/12 20:55</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Param</span>:  []</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Return</span>: void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testConnection</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">         <span class="comment">// 获取c3p0数据库连接</span></span><br><span class="line">         ComboPooledDataSource cpds = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置相关参数，对数据库连接池进行管理</span></span><br><span class="line">         cpds.setDriverClass(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">         cpds.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/test?characterEncoding=UTF-8&quot;</span>);</span><br><span class="line">         cpds.setUser(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">         cpds.setPassword(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 设置初始时数据库连接池中的连接数</span></span><br><span class="line">         cpds.setInitialPoolSize(<span class="number">10</span>);</span><br><span class="line">        Connection conn = cpds.getConnection();</span><br><span class="line">        System.out.println(conn);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 销毁c3p0数据库连接池</span></span><br><span class="line">        DataSources.destroy(cpds);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span>:c3p0连接方式二</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Author</span>: lizhengming</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Date</span>:   2021/11/12 20:59</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Param</span>:  []</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Return</span>: void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">testConnection2</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ComboPooledDataSource hello = <span class="keyword">new</span> ComboPooledDataSource(<span class="string">&quot;myc3p0&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> hello.getConnection();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c3p0-config</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">named-config</span> <span class="attr">name</span>=<span class="string">&quot;myc3p0&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 提供获取连接的4个基本信息 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span>&gt;</span>jdbc:mysql://localhost:3306/test?useSSL=false<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 进行数据库连接池管理的基本信息 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 当数据库连接池中的连接数不够时，c3p0一次性向数据库服务器申请的连接数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;acquireIncrement&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- c3p0数据库连接池中初始化时的连接数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialPoolSize&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- c3p0数据库连接池维护的最少连接数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minPoolSize&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- c3p0数据库连接池维护的最多的连接数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- c3p0数据库连接池最多维护的Statement的个数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxStatements&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 每个连接中可以最多使用的Statement的个数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxStatementsPerConnection&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">named-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c3p0-config</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>DBCP数据库连接池创建连接</strong></p>
<ul>
<li>连接方式一</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Connection <span class="title">testGetConnection</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    	<span class="comment">//创建连接池</span></span><br><span class="line">        BasicDataSource source = <span class="keyword">new</span> BasicDataSource();</span><br><span class="line">        source.setDriverClassName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        source.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/test?characterEncoding=UTF-8&quot;</span>);</span><br><span class="line">        source.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        source.setPassword(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> source.getConnection();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>连接方式二 </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 在util中的写法</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> BasicDataSource source;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        Properties ps = <span class="keyword">new</span> Properties();</span><br><span class="line">        InputStream is = ClassLoader.getSystemClassLoader().getResourceAsStream(<span class="string">&quot;dbcp.properties&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ps.load(is);</span><br><span class="line">            source = BasicDataSourceFactory.createDataSource(ps);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  Connection <span class="title">testDBCPConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> source.getConnection();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li>
<li><p>DBCP配置文件</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">driverClassName</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/test?characterEncoding=UTF-8</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure></li>
</ul>
<p> <strong>Druid数据库连接池创建连接</strong></p>
<ul>
<li><p>连接方式一</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">public</span> Connection <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">      DruidDataSource dds = <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">      dds.setDriverClassName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">      dds.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/test?characterEncoding=UTF-8&quot;</span>);</span><br><span class="line">      dds.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">      dds.setPassword(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> dds.getConnection();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>连接方式二</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> DataSource source;</span><br><span class="line">   <span class="keyword">static</span> &#123;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line"><span class="comment">//     InputStream is = ClassLoader.getSystemClassLoader().getResourceAsStream(&quot;druid.properties&quot;);</span></span><br><span class="line">           InputStream is = DruidTest.class.getClassLoader().getResourceAsStream(<span class="string">&quot;druid.properties&quot;</span>);</span><br><span class="line">           properties.load(is);</span><br><span class="line">           source = DruidDataSourceFactory.createDataSource(properties);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> Connection <span class="title">testConnection</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> source.getConnection();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li>
<li><p>Druid配置文件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">driverClassName=com.mysql.jdbc.Driver</span><br><span class="line">url=jdbc:mysql:<span class="comment">//localhost:3306/test?characterEncoding=UTF-8</span></span><br><span class="line">username=root</span><br><span class="line">password=<span class="number">123456</span></span><br></pre></td></tr></table></figure></li>
</ul>
<p><strong>DBUtils工具</strong></p>
<ul>
<li><p><strong>QueryRunner.update 实现增删改</strong></p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsert</span><span class="params">()</span>  </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String sql = <span class="string">&quot;insert into customers (name,email,birth) values(?,?,?)&quot;</span>;</span><br><span class="line">            QueryRunner queryRunner = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">            connection  = DruidTest.testConnection();</span><br><span class="line">            queryRunner.update(connection,sql,<span class="string">&quot;刘攀&quot;</span>,<span class="string">&quot;110@163.com&quot;</span>,<span class="string">&quot;2001-09-30&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtil.closeResource(connection,<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
<li><p><strong>QueryRunner.query 实现查询</strong></p>
<ul>
<li><p><code>BeanHandler&lt;Customer&gt; handler = new BeanHandler&lt;&gt;(Customer.class); 实现单个查询，封装的是一个对象</code></p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQuery</span><span class="params">()</span>  </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">             conn = DruidTest.testConnection();</span><br><span class="line">            QueryRunner runner = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">            String sql = <span class="string">&quot;select * from customers where id = ?&quot;</span>;</span><br><span class="line">            BeanHandler&lt;Customer&gt; handler = <span class="keyword">new</span> BeanHandler&lt;&gt;(Customer.class);</span><br><span class="line">      </span><br><span class="line">            Customer customer = runner.query(conn, sql, handler, <span class="number">4</span>);</span><br><span class="line">            System.out.println(customer);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtil.closeResource(conn,<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
<li><p><code>BeanListHandler&lt;Customer&gt; handler = new BeanListHandler&lt;&gt;(Customer.class); 封装了多个对象</code></p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQueryMore</span><span class="params">()</span> </span>&#123;</span><br><span class="line">             Connection conn = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn = DruidTest.testConnection();</span><br><span class="line">                QueryRunner runner = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">                String sql = <span class="string">&quot;select * from customers&quot;</span>;</span><br><span class="line">      </span><br><span class="line">                BeanListHandler&lt;Customer&gt; handler = <span class="keyword">new</span> BeanListHandler&lt;&gt;(Customer.class);</span><br><span class="line">      </span><br><span class="line">                List&lt;Customer&gt; customers = runner.query(conn, sql, handler);</span><br><span class="line">                System.out.println(customers);</span><br><span class="line">                <span class="keyword">for</span> (Customer customer : customers) &#123;</span><br><span class="line">                    System.out.println(customer);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">                JdbcUtil.closeResource(conn,<span class="keyword">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- `MapHandler handler= <span class="keyword">new</span> MapHandler(); 单个的查询，以键值对的方式存储`</span><br><span class="line"></span><br><span class="line">   ```<span class="function">java</span></span><br><span class="line"><span class="function">      <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQueryMap</span><span class="params">()</span>  </span>&#123;</span><br><span class="line">            Connection conn = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                 conn = DruidTest.testConnection();</span><br><span class="line">                QueryRunner runner = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">                String sql = <span class="string">&quot;select * from customers where id =5&quot;</span>;</span><br><span class="line">      </span><br><span class="line">                MapHandler handler= <span class="keyword">new</span> MapHandler();</span><br><span class="line">      </span><br><span class="line">                Map&lt;String, Object&gt; map = runner.query(conn, sql, handler);</span><br><span class="line">                System.out.println(map);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                JdbcUtil.closeResource(conn,<span class="keyword">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line">      </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li>
<li><p><code>MapListHandler handler = new MapListHandler(); 以map集合的形式封装</code></p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQueryMoreMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      Connection conn = <span class="keyword">null</span>;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">          conn = DruidTest.testConnection();</span><br><span class="line">          QueryRunner runner = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">          String sql = <span class="string">&quot;select * from customers&quot;</span>;</span><br><span class="line">          MapListHandler handler = <span class="keyword">new</span> MapListHandler();</span><br><span class="line"></span><br><span class="line">          List&lt;Map&lt;String, Object&gt;&gt; map = runner.query(conn, sql, handler);</span><br><span class="line">          <span class="keyword">for</span> (Map&lt;String, Object&gt; stringObjectMap : map) &#123;</span><br><span class="line">              System.out.println(stringObjectMap);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line"></span><br><span class="line">      &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">          JdbcUtil.closeResource(conn,<span class="keyword">null</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li>
<li><p><code>ScalarHandler handler = new ScalarHandler(); 处理特殊值 例如返回表中有多少条记录、返回最大生日</code></p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testScalar</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">       Connection conn = <span class="keyword">null</span>;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = DruidTest.testConnection();</span><br><span class="line">           QueryRunner runner = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">           String sql = <span class="string">&quot;select count(*) from customers&quot;</span>;</span><br><span class="line">           ScalarHandler handler = <span class="keyword">new</span> ScalarHandler();</span><br><span class="line">           <span class="keyword">long</span> count = (<span class="keyword">long</span>) runner.query(conn, sql, handler);</span><br><span class="line">           System.out.println(count);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line"> </span><br><span class="line">       &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">           JdbcUtil.closeResource(conn,<span class="keyword">null</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testScalar</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">             conn = DruidTest.testConnection();</span><br><span class="line">            QueryRunner runner = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">            String sql = <span class="string">&quot;select max(birth) from customers&quot;</span>;</span><br><span class="line">            ScalarHandler handler = <span class="keyword">new</span> ScalarHandler();</span><br><span class="line">            Date date = (Date) runner.query(conn, sql, handler);</span><br><span class="line">            System.out.println(date);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtil.closeResource(conn,<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
<li><p><strong>自定义handler</strong></p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQueryMoreMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = DruidTest.testConnection();</span><br><span class="line">            QueryRunner runner = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">            String sql = <span class="string">&quot;select * from customers&quot;</span>;</span><br><span class="line">            ResultSetHandler&lt;Customer&gt; handler = <span class="keyword">new</span> ResultSetHandler&lt;Customer&gt;()&#123;</span><br><span class="line"></span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> Customer <span class="title">handle</span><span class="params">(ResultSet resultSet)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">                    <span class="comment">// 此return 作为query的返回值</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtil.closeResource(conn,<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p><strong>DBUtils 关闭操作</strong></p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testClose</span><span class="params">(Connection con, Statement ps,ResultSet rs)</span></span>&#123;</span><br><span class="line">     <span class="keyword">try</span> &#123;</span><br><span class="line">         DbUtils.close(con);</span><br><span class="line">         DbUtils.close(ps);</span><br><span class="line">         DbUtils.close(rs);</span><br><span class="line">     &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">         e.printStackTrace();</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCloseResource</span><span class="params">(Connection con, Statement ps,ResultSet rs)</span></span>&#123;</span><br><span class="line"> DbUtils.closeQuietly(con);</span><br><span class="line"> DbUtils.closeQuietly(ps);</span><br><span class="line"> DbUtils.closeQuietly(rs);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
]]></content>
      <tags>
        <tag>Jdbc</tag>
      </tags>
  </entry>
</search>
