<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Javascript基本语法--变量</title>
    <url>/2021/10/04/Javascript%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95-%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<p><strong>Javascript基础语法–变量</strong></p>
<span id="more"></span>

<p><strong>定义变量：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> app;		<span class="comment">//定义变量</span></span><br><span class="line"><span class="keyword">var</span> app = <span class="string">&quot;hello world!&quot;</span>; 		<span class="comment">// 定义变量并初始化赋值</span></span><br><span class="line"><span class="keyword">var</span> name,sex,age,num;  	<span class="comment">//定义多个变量(初始化可选)</span></span><br></pre></td></tr></table></figure>



<p><strong>注释：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 单行注释</span></span><br><span class="line"><span class="comment">/* 多行注释 */</span> </span><br></pre></td></tr></table></figure>



<p><strong>var声明作用域：</strong></p>
<ul>
<li>使用<code>var</code>定义的变量会成为包含它的函数的局部变量</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="string">&quot;hello world!&quot;</span>; <span class="comment">//局部变量</span></span><br><span class="line">&#125;</span><br><span class="line">test();</span><br><span class="line"><span class="built_in">console</span>.log(app); <span class="comment">//Error</span></span><br><span class="line"></span><br><span class="line">-------------------------------</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    app = <span class="string">&quot;hello world!&quot;</span>  <span class="comment">//省略var可以创建全局变量，但不推荐,严格模式下错误。</span></span><br><span class="line">&#125;</span><br><span class="line">test();</span><br><span class="line"><span class="built_in">console</span>.log(app);</span><br></pre></td></tr></table></figure>

<p><strong>var声明提升：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(age);</span><br><span class="line">    <span class="keyword">var</span> age = <span class="number">26</span>;</span><br><span class="line">&#125;</span><br><span class="line">test(); </span><br></pre></td></tr></table></figure>

<p><code>等价如下：</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> age;</span><br><span class="line">    <span class="built_in">console</span>.log(age);</span><br><span class="line">    age = <span class="number">26</span>;</span><br><span class="line">&#125;</span><br><span class="line">test();   </span><br><span class="line"><span class="comment">// 这就是所谓的提升（hoist），也就是把所有变量的声明都拉到函数作用域的顶部</span></span><br><span class="line"><span class="comment">// 反复多次使用var声明同一个变量也没有问题</span></span><br></pre></td></tr></table></figure>

<p><strong>let声明:</strong></p>
<ul>
<li><code>let</code>声明的范围是块作用域，而<code>var</code>声明的范围是函数作用域</li>
<li><code>let</code>声明的变量不会在作用域中被提升</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> name = <span class="string">&quot;李征明&quot;</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(name); <span class="comment">// 李征明</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(name); <span class="comment">//李征明</span></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> age = <span class="number">26</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(age); <span class="comment">//26</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(age); <span class="comment">//ReferenceError: age 没有定义</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里age的作用域仅仅在块内部</span></span><br><span class="line"><span class="comment">// let 不允许同一个块作用域出现冗余声明</span></span><br><span class="line"><span class="keyword">let</span> age；</span><br><span class="line"><span class="keyword">let</span> age；  <span class="comment">//Error</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>全局声明:</strong></p>
<ul>
<li><code>var</code>在全局作用域中声明的变量会成为window对象的属性</li>
<li><code>let</code>在全局作用域中声明的变量不会成为window对象的属性</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;李征明&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> age = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.name);  <span class="comment">//李征明</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.age);	<span class="comment">// undefined</span></span><br></pre></td></tr></table></figure>

<p><strong>for循环中的let声明</strong></p>
<ul>
<li>for循环定义的迭代变量会渗透到循环体外部</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span> i++)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i);   <span class="comment">// 5</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i); <span class="comment">// Error,i没有定义</span></span><br></pre></td></tr></table></figure>

<p><strong>const声明:</strong></p>
<ul>
<li><code>const</code>基本与<code>let</code>相同，唯一一个重要区别是声明变量时需要初始化，且不可修改</li>
<li><code>const</code>可以修改声明对象的内部的属性</li>
<li>不能使用<code>const</code>迭代变量</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> age = <span class="number">26</span>;</span><br><span class="line">age = <span class="number">36</span> ; <span class="comment">// Error,给常量赋值</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>Javascript基础语法--数据类型</title>
    <url>/2021/10/06/Javascript%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<p>Javascript基本语法–变量</p>
<span id="more"></span>

<p><strong>思维导图:</strong></p>
<p><img src="/2021/10/06/Javascript%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%AF%BC%E5%9B%BE.jpg"></p>
<table>
<thead>
<tr>
<th align="center">数据类型</th>
<th align="center">转换为true的值</th>
<th align="center">转换为false的值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Boolean</td>
<td align="center">true</td>
<td align="center">false</td>
</tr>
<tr>
<td align="center">String</td>
<td align="center">非空字符串</td>
<td align="center">“” 空字符串</td>
</tr>
<tr>
<td align="center">Number</td>
<td align="center">非零数值(包括无穷)</td>
<td align="center">0、NaN</td>
</tr>
<tr>
<td align="center">Object</td>
<td align="center">任意对象</td>
<td align="center">null</td>
</tr>
<tr>
<td align="center">Undefined</td>
<td align="center">N / A(不存在)</td>
<td align="center">undefined</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown基本语法</title>
    <url>/2021/10/04/MarkDown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<p><strong>Markdown 基本语法</strong></p>
<span id="more"></span>

<h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><ul>
<li>在行首插入 # 可标记出标题</li>
<li>#的个数表示了标题的等级</li>
<li>建议在# 后面加一个空格</li>
<li>Markdown中最多支持前六级标题</li>
</ul>
<p><strong>效果如下</strong></p>
<p><img src="/2021/10/04/MarkDown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/2.png" alt="image-20211004191723293"></p>
<h2 id="2-粗体和斜体"><a href="#2-粗体和斜体" class="headerlink" title="2.粗体和斜体"></a>2.粗体和斜体</h2><ul>
<li>粗体由两个*或者两个_包裹</li>
<li>斜体由一个*或者一个_包裹</li>
<li>建议粗体用两个*包裹</li>
<li>建议斜体用一个*包裹</li>
</ul>
<p><strong>效果如下：</strong></p>
<p><img src="/2021/10/04/MarkDown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/3.png"></p>
<h2 id="3-段落与换行"><a href="#3-段落与换行" class="headerlink" title="3.段落与换行"></a>3.段落与换行</h2><ul>
<li>如果行与行之间没有空行，则会被视为同一段落</li>
<li>如果行与行之间有空行，则会视为不同段落</li>
<li>空行是指行内什么都没有，或者只有空格和制表符</li>
<li>如果想在段内换行，则需要在上一行的结尾插入两个以上的空格然后按回车键</li>
</ul>
<h2 id="4-列表"><a href="#4-列表" class="headerlink" title="4.列表"></a>4.列表</h2><ul>
<li>数字序号 + 英文句号 + 空格  + 列表内容 表示有序列表</li>
<li>星号 + 空格  +  列表内容 表示无序列表</li>
<li>使用+ - * / 来标记无序列表的效果是相同的</li>
<li>列表中可以嵌套列表</li>
<li>有序列表和无序列表页可以互相嵌套</li>
<li>建议使用 <strong>-</strong> 标记无序列表</li>
<li>无序列表有换行则建议使用3个空格</li>
<li>有序列表有换行则建议使用2个空格</li>
</ul>
<p><strong>效果如下：</strong></p>
<p><img src="/2021/10/04/MarkDown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/4.png"></p>
<h2 id="5-分割线"><a href="#5-分割线" class="headerlink" title="5.分割线"></a>5.分割线</h2><ul>
<li>分割线使用至少三个以上的* / - / _ 来标记</li>
<li>行内不能有其他的字符</li>
<li>可以在标记符中间加上空格</li>
</ul>
<p><strong>效果如下：</strong></p>
<p><img src="/2021/10/04/MarkDown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/5.png"></p>
<h2 id="6-网址链接"><a href="#6-网址链接" class="headerlink" title="6.网址链接"></a>6.网址链接</h2><ul>
<li>建议使用&lt;&gt;包裹自动链接</li>
<li>自动链接要以http / https开头</li>
</ul>
<p><strong>效果如下：</strong></p>
<p><img src="/2021/10/04/MarkDown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/6.png"></p>
<h2 id="7-行内代码与代码块"><a href="#7-行内代码与代码块" class="headerlink" title="7.行内代码与代码块"></a>7.行内代码与代码块</h2><ul>
<li>行内代码使用`包裹 </li>
<li><code>测试</code></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">``` python</span><br><span class="line"></span><br><span class="line">```</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Jdbc</title>
    <url>/2021/11/08/Jdbc/</url>
    <content><![CDATA[<p><strong>Jdbc基础知识</strong></p>
<span id="more"></span>

<p>1.<strong>Jdbc的连接</strong></p>
<ul>
<li><p>方式一</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testConnettion</span><span class="params">()</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException </span>&#123;</span><br><span class="line">  </span><br><span class="line">     <span class="comment">// 1.提供三个连接的基本信息 url、user、password</span></span><br><span class="line">  </span><br><span class="line">     String url = <span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>;</span><br><span class="line">     String user = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">     String pass = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">  </span><br><span class="line">     <span class="comment">// 2. 加载Driver</span></span><br><span class="line">     </span><br><span class="line">     Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">  </span><br><span class="line">     <span class="comment">//3. 获取连接</span></span><br><span class="line">  </span><br><span class="line">     Connection con = DriverManager.getConnection(url,user,pass);</span><br><span class="line">  </span><br><span class="line">     System.out.println(con);</span><br><span class="line">  </span><br><span class="line"> &#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li>
<li><p>运行效果</p>
<img src="/2021/11/08/Jdbc/Jdbc_con_1.png" style="zoom:60%;"></li>
<li><p>方式二</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Connection</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 将数据库连接需要的4个基本信息声明在配置文件中，通过读取配置文件的方式，获取连接</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            好处：</span></span><br><span class="line"><span class="comment">            1.实现了数据与代码的分离。实现了解耦。</span></span><br><span class="line"><span class="comment">            2.如果需要修改配置文件信息，可以避免重新打包。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1. 读取配置文件中的4个基本信息</span></span><br><span class="line">        InputStream  is =    ConnectionTest.class.getClassLoader().getResourceAsStream(<span class="string">&quot;Jdbc.properties&quot;</span>);</span><br><span class="line">        Properties pros  =  <span class="keyword">new</span> Properties();</span><br><span class="line">        pros.load(is);</span><br><span class="line">        String user = pros.getProperty(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        String pass = pros.getProperty(<span class="string">&quot;pass&quot;</span>);</span><br><span class="line">        String url = pros.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">        String driver = pros.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.加载驱动</span></span><br><span class="line"></span><br><span class="line">        Class.forName(driver);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.获取连接</span></span><br><span class="line"></span><br><span class="line">        Connection con = DriverManager.getConnection(url,user,pass);</span><br><span class="line">        System.out.println(con);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">properties 中的内容</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            user=root</span></span><br><span class="line"><span class="comment">            pass=123456</span></span><br><span class="line"><span class="comment">            url=jdbc:mysql://localhost:3306/test</span></span><br><span class="line"><span class="comment">            driver=com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<p>2.<strong>流程图</strong></p>
<p>​    <img src="/2021/11/08/Jdbc/Jdbc流程图.png" style="zoom: 67%;"></p>
<p>3.<strong>PreparedStatement</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">// 向 customers 中添加数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsert</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Connection con = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line"></span><br><span class="line">            InputStream inputStream = ConnectionTest.class.getClassLoader().getResourceAsStream(<span class="string">&quot;./Jdbc.properties&quot;</span>);</span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            properties.load(inputStream);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取配置信息</span></span><br><span class="line"></span><br><span class="line">            String user = properties.getProperty(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">            String pass = properties.getProperty(<span class="string">&quot;pass&quot;</span>);</span><br><span class="line">            String url = properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">            String driver = properties.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 加载驱动</span></span><br><span class="line"></span><br><span class="line">            Class.forName(driver);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取连接</span></span><br><span class="line"></span><br><span class="line">            con= DriverManager.getConnection(url, user, pass);</span><br><span class="line">            <span class="comment">//           System.out.println(con);</span></span><br><span class="line">            <span class="comment">//          设置插入语句         ?  为占位符</span></span><br><span class="line"></span><br><span class="line">            String sql = <span class="string">&quot;insert into customers (name,email,birth) values(?,?,?)&quot;</span>;</span><br><span class="line"></span><br><span class="line">            ps = con.prepareStatement(sql);</span><br><span class="line">            ps.setString(<span class="number">1</span>,<span class="string">&quot;文光彩&quot;</span>);</span><br><span class="line">            ps.setString(<span class="number">2</span>,<span class="string">&quot;444@163.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置时间格式</span></span><br><span class="line">            SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">            java.util.Date date = sdf.parse(<span class="string">&quot;2001-03-09&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            ps.setDate(<span class="number">3</span>,<span class="keyword">new</span> Date(date.getTime()));</span><br><span class="line"></span><br><span class="line">            <span class="comment">//  执行sql语句 带占位符的为 动态sql</span></span><br><span class="line">            ps.execute();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(con != <span class="keyword">null</span>)</span><br><span class="line">                    con.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">              <span class="keyword">if</span>(ps != <span class="keyword">null</span>) &#123;</span><br><span class="line">                  <span class="keyword">try</span> &#123;</span><br><span class="line">                      ps.close();</span><br><span class="line">                  &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                      e.printStackTrace();</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Jdbc.properties 中的文件</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">user=root</span></span><br><span class="line"><span class="comment">pass=123456</span></span><br><span class="line"><span class="comment">url=jdbc:mysql://localhost:3306/test?cha racterEncoding=utf8</span></span><br><span class="line"><span class="comment">driver=com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>4.<strong>JdbcUtils</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      获取数据库的连接</span></span><br><span class="line"><span class="comment"> *      释放资源</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        InputStream is = ConnectionTest.class.getClassLoader().getResourceAsStream(<span class="string">&quot;./Jdbc.properties&quot;</span>);</span><br><span class="line">        Properties ps = <span class="keyword">new</span> Properties();</span><br><span class="line">        ps.load(is);</span><br><span class="line">        </span><br><span class="line">     <span class="comment">// ClassLoader.getSystemClassLoader().getResourceAsStream(&quot;./Jdbc.properties&quot;)</span></span><br><span class="line"></span><br><span class="line">        String user = ps.getProperty(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        String pass = ps.getProperty(<span class="string">&quot;pass&quot;</span>);</span><br><span class="line">        String url = ps.getProperty(<span class="string">&quot;ur l&quot;</span>);</span><br><span class="line">        String driver = ps.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Class.forName(driver);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url,user,pass);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">closeResource</span><span class="params">(Connection con, Statement ps)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ps != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                ps.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(con != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                con.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>Jdbc</tag>
      </tags>
  </entry>
  <entry>
    <title>MySql基础知识</title>
    <url>/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<p><strong>MySql基础知识</strong></p>
<span id="more"></span>

<ol>
<li><p>MySql常见命令</p>
<ul>
<li><p>查看当前所有的数据库</p>
<p><code>show databases;</code></p>
</li>
<li><p>打开指定的库</p>
<p><code>use + 库名</code></p>
</li>
<li><p>查看当前库的所有表</p>
<p><code>show tables;</code></p>
</li>
<li><p>查看其它库的所有表</p>
<p><code>show tables from + 库名;</code></p>
</li>
<li><p>创建表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">	</span><br><span class="line">    列名 列类型,</span><br><span class="line">    列名 列类型,</span><br><span class="line">    列名 列类型,</span><br><span class="line">    .......</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li>
<li><p>查看表结构</p>
<p><code>desc + 表名;</code></p>
</li>
<li><p>插入语句</p>
<p><code>insert into + 表名 + (字段名1，字段名2，...) values(val_1,val_2,...);</code></p>
</li>
<li><p>查询语句</p>
<p><code>select * from + 表名 (查询全部)</code></p>
</li>
<li><p>更新语句</p>
<p><code>update + 表名 + set +字段名 = val where 字段名 = val</code></p>
</li>
<li><p>删除语句</p>
<p><code>delete from + 表名+where + 字段名 = val</code></p>
</li>
<li><p>查看服务器的版本</p>
<p><code>select version();</code> 登录到mysql服务端</p>
<p><code>mysql -v;</code>没有登录的mysql服务端</p>
</li>
</ul>
<p>1.1 <strong>测试示例</strong></p>
<ul>
<li><code>showdatabases</code><ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/show_databases.png" style="zoom:80%;"></li>
</ul>
</li>
</ul>
<ul>
<li><p><code>user+库名</code></p>
<ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/use_database.png" style="zoom:80%;"></li>
</ul>
</li>
<li><p><code>show tables</code></p>
<ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/show_tables.png" style="zoom:80%;"></li>
</ul>
</li>
<li><p><code>show tables from + 库名</code></p>
<ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/show_tables_from.png" style="zoom:80%;"></li>
</ul>
</li>
<li><p><code>create tables</code></p>
<ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/create.png" style="zoom:80%;"></li>
</ul>
</li>
<li><p><code>desc+表名</code></p>
<ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/desc.png" style="zoom:80%;"></li>
</ul>
</li>
<li><p><code>select * from +表名</code></p>
<ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/select.png" style="zoom:80%;"></li>
</ul>
</li>
<li><p><code>insert into + 表名 + (字段1，字段2，...) values(val_1,val_2,...)</code></p>
<ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/insert.png" style="zoom:80%;"></li>
</ul>
</li>
<li><p><code>update + 表名 + set +字段名 = val where 字段名 = val </code></p>
<ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/update.png" style="zoom:80%;"></li>
</ul>
</li>
<li><p><code>delete from + 表名+where + 字段名 = val</code></p>
<ul>
<li><img src="/2021/10/26/MySql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/delete.png" style="zoom:80%;"></li>
</ul>
</li>
</ul>
</li>
<li></li>
</ol>
]]></content>
      <categories>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>MySql</tag>
      </tags>
  </entry>
  <entry>
    <title>xml基础</title>
    <url>/2021/11/01/xml%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p><strong>xml基础</strong></p>
<span id="more"></span>

<p><strong>思维导图</strong></p>
<p><img src="/2021/11/01/xml%E5%9F%BA%E7%A1%80/xml.png"></p>
<p><strong>基本语法</strong></p>
<ul>
<li>xml文档的后缀名 .xml</li>
<li>xml第一行必须定义为文档声明</li>
<li>xml文档中有且仅有一个根标签</li>
<li>属性值必须使用引号(单双都可)</li>
<li>标签必须正确关闭</li>
<li>xml标签名称区分大小写</li>
</ul>
<p><strong>代码示例</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&#x27;1.0&#x27; ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">&#x27;1&#x27;</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">name</span>&gt;</span>李二狗<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>19<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sex</span>&gt;</span>male<span class="tag">&lt;/<span class="name">sex</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">name</span>&gt;</span>李征明<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">age</span>&gt;</span>19<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sex</span>&gt;</span>male<span class="tag">&lt;/<span class="name">sex</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>组成部分</strong></p>
<ul>
<li>文档声明<ul>
<li>格式：<code>&lt;?xml 属性列表 ?&gt;</code></li>
</ul>
</li>
<li><h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2></li>
</ul>
]]></content>
      <tags>
        <tag>xml</tag>
      </tags>
  </entry>
  <entry>
    <title>centos7.6安装青龙面板</title>
    <url>/2021/10/07/centos7-6%E5%AE%89%E8%A3%85%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF/</url>
    <content><![CDATA[<p><strong>centos7.6安装青龙面板</strong></p>
<span id="more"></span>

<h3 id="安装所需："><a href="#安装所需：" class="headerlink" title="安装所需："></a>安装所需：</h3><ul>
<li>centos7.6</li>
<li>宝塔远程工具</li>
</ul>
<h3 id="centos7-6安装宝塔面板"><a href="#centos7-6安装宝塔面板" class="headerlink" title="centos7.6安装宝塔面板"></a>centos7.6安装宝塔面板</h3><p><strong>宝塔安装命令</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure>

<p><img src="/2021/10/07/centos7-6%E5%AE%89%E8%A3%85%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E5%AE%89%E8%A3%85.png"></p>
<p><strong>服务器放行端口</strong></p>
<ul>
<li>8888</li>
<li>5700</li>
</ul>
<p><img src="/2021/10/07/centos7-6%E5%AE%89%E8%A3%85%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF/%E6%94%BE%E8%A1%8C%E7%AB%AF%E5%8F%A3.png"></p>
<p><strong>登录宝塔 linux</strong> </p>
<ul>
<li>安装docker</li>
</ul>
<p><img src="/2021/10/07/centos7-6%E5%AE%89%E8%A3%85%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF/%E5%AE%89%E8%A3%85docker.png"></p>
<p><strong>安装青龙面板</strong></p>
<ul>
<li>使用宝塔ssh远程连接</li>
<li>使用以下命令</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -dit \</span><br><span class="line">   -v $PWD/QL/config:/ql/config \</span><br><span class="line">   -v $PWD/QL/log:/ql/log \</span><br><span class="line">   -v $PWD/QL/db:/ql/db \</span><br><span class="line">   -v $PWD/QL/scripts:/ql/scripts \</span><br><span class="line">   --net host \</span><br><span class="line">   --name qinglong \</span><br><span class="line">   --hostname qinglong \</span><br><span class="line">   --restart always \</span><br><span class="line">   whyour/qinglong:latest</span><br></pre></td></tr></table></figure>

<p><img src="/2021/10/07/centos7-6%E5%AE%89%E8%A3%85%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF/%E5%AE%89%E8%A3%85%E9%9D%92%E9%BE%99.png"></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>青龙面板</tag>
      </tags>
  </entry>
</search>
