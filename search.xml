<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Markdown基本语法</title>
    <url>/2021/10/04/MarkDown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<p><strong>Markdown 基本语法</strong></p>
<span id="more"></span>

<h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><ul>
<li>在行首插入 # 可标记出标题</li>
<li>#的个数表示了标题的等级</li>
<li>建议在# 后面加一个空格</li>
<li>Markdown中最多支持前六级标题</li>
</ul>
<p><strong>效果如下</strong></p>
<p><img src="/2021/10/04/MarkDown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/2.png" alt="image-20211004191723293"></p>
<h2 id="2-粗体和斜体"><a href="#2-粗体和斜体" class="headerlink" title="2.粗体和斜体"></a>2.粗体和斜体</h2><ul>
<li>粗体由两个*或者两个_包裹</li>
<li>斜体由一个*或者一个_包裹</li>
<li>建议粗体用两个*包裹</li>
<li>建议斜体用一个*包裹</li>
</ul>
<p><strong>效果如下：</strong></p>
<p><img src="/2021/10/04/MarkDown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/3.png"></p>
<h2 id="3-段落与换行"><a href="#3-段落与换行" class="headerlink" title="3.段落与换行"></a>3.段落与换行</h2><ul>
<li>如果行与行之间没有空行，则会被视为同一段落</li>
<li>如果行与行之间有空行，则会视为不同段落</li>
<li>空行是指行内什么都没有，或者只有空格和制表符</li>
<li>如果想在段内换行，则需要在上一行的结尾插入两个以上的空格然后按回车键</li>
</ul>
<h2 id="4-列表"><a href="#4-列表" class="headerlink" title="4.列表"></a>4.列表</h2><ul>
<li>数字序号 + 英文句号 + 空格  + 列表内容 表示有序列表</li>
<li>星号 + 空格  +  列表内容 表示无序列表</li>
<li>使用+ - * / 来标记无序列表的效果是相同的</li>
<li>列表中可以嵌套列表</li>
<li>有序列表和无序列表页可以互相嵌套</li>
<li>建议使用 <strong>-</strong> 标记无序列表</li>
<li>无序列表有换行则建议使用3个空格</li>
<li>有序列表有换行则建议使用2个空格</li>
</ul>
<p><strong>效果如下：</strong></p>
<p><img src="/2021/10/04/MarkDown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/4.png"></p>
<h2 id="5-分割线"><a href="#5-分割线" class="headerlink" title="5.分割线"></a>5.分割线</h2><ul>
<li>分割线使用至少三个以上的* / - / _ 来标记</li>
<li>行内不能有其他的字符</li>
<li>可以在标记符中间加上空格</li>
</ul>
<p><strong>效果如下：</strong></p>
<p><img src="/2021/10/04/MarkDown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/5.png"></p>
<h2 id="6-网址链接"><a href="#6-网址链接" class="headerlink" title="6.网址链接"></a>6.网址链接</h2><ul>
<li>建议使用&lt;&gt;包裹自动链接</li>
<li>自动链接要以http / https开头</li>
</ul>
<p><strong>效果如下：</strong></p>
<p><img src="/2021/10/04/MarkDown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/6.png"></p>
<h2 id="7-行内代码与代码块"><a href="#7-行内代码与代码块" class="headerlink" title="7.行内代码与代码块"></a>7.行内代码与代码块</h2><ul>
<li>行内代码使用`包裹 </li>
<li><code>测试</code></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">``` python</span><br><span class="line"></span><br><span class="line">```</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Javascript基本语法--变量</title>
    <url>/2021/10/04/Javascript%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95-%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<p><strong>Javascript基础语法–变量</strong></p>
<span id="more"></span>

<p><strong>定义变量：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> app;		<span class="comment">//定义变量</span></span><br><span class="line"><span class="keyword">var</span> app = <span class="string">&quot;hello world!&quot;</span>; 		<span class="comment">// 定义变量并初始化赋值</span></span><br><span class="line"><span class="keyword">var</span> name,sex,age,num;  	<span class="comment">//定义多个变量(初始化可选)</span></span><br></pre></td></tr></table></figure>



<p><strong>注释：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 单行注释</span></span><br><span class="line"><span class="comment">/* 多行注释 */</span> </span><br></pre></td></tr></table></figure>



<p><strong>var声明作用域：</strong></p>
<ul>
<li>使用<code>var</code>定义的变量会成为包含它的函数的局部变量</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="string">&quot;hello world!&quot;</span>; <span class="comment">//局部变量</span></span><br><span class="line">&#125;</span><br><span class="line">test();</span><br><span class="line"><span class="built_in">console</span>.log(app); <span class="comment">//Error</span></span><br><span class="line"></span><br><span class="line">-------------------------------</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    app = <span class="string">&quot;hello world!&quot;</span>  <span class="comment">//省略var可以创建全局变量，但不推荐,严格模式下错误。</span></span><br><span class="line">&#125;</span><br><span class="line">test();</span><br><span class="line"><span class="built_in">console</span>.log(app);</span><br></pre></td></tr></table></figure>

<p><strong>var声明提升：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(age);</span><br><span class="line">    <span class="keyword">var</span> age = <span class="number">26</span>;</span><br><span class="line">&#125;</span><br><span class="line">test(); </span><br></pre></td></tr></table></figure>

<p><code>等价如下：</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> age;</span><br><span class="line">    <span class="built_in">console</span>.log(age);</span><br><span class="line">    age = <span class="number">26</span>;</span><br><span class="line">&#125;</span><br><span class="line">test();   </span><br><span class="line"><span class="comment">// 这就是所谓的提升（hoist），也就是把所有变量的声明都拉到函数作用域的顶部</span></span><br><span class="line"><span class="comment">// 反复多次使用var声明同一个变量也没有问题</span></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
      </tags>
  </entry>
</search>
